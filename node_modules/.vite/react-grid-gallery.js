import {
  require_react_dom
} from "./chunk-IEFVAVCH.js";
import {
  require_prop_types
} from "./chunk-V6A23VRD.js";
import {
  require_react
} from "./chunk-5ZDF3KYG.js";
import "./chunk-R2NOIJX5.js";
import {
  __commonJS,
  __esm,
  __export,
  __toModule,
  init_define_process_env
} from "./chunk-F7YC6H4L.js";

// node_modules/aphrodite/lib/util.js
var require_util = __commonJS({
  "node_modules/aphrodite/lib/util.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _slicedToArray = function() {
      function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = void 0;
        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i)
              break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"])
              _i["return"]();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
      return function(arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
      };
    }();
    var _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var objectToPairs = function objectToPairs2(obj) {
      return Object.keys(obj).map(function(key) {
        return [key, obj[key]];
      });
    };
    exports.objectToPairs = objectToPairs;
    var pairsToObject = function pairsToObject2(pairs) {
      var result = {};
      pairs.forEach(function(_ref) {
        var _ref2 = _slicedToArray(_ref, 2);
        var key = _ref2[0];
        var val = _ref2[1];
        result[key] = val;
      });
      return result;
    };
    var mapObj = function mapObj2(obj, fn) {
      return pairsToObject(objectToPairs(obj).map(fn));
    };
    exports.mapObj = mapObj;
    var flatten = function flatten2(list) {
      return list.reduce(function(memo, x) {
        return memo.concat(x);
      }, []);
    };
    exports.flatten = flatten;
    var UPPERCASE_RE = /([A-Z])/g;
    var MS_RE = /^ms-/;
    var kebabify = function kebabify2(string) {
      return string.replace(UPPERCASE_RE, "-$1").toLowerCase();
    };
    var kebabifyStyleName = function kebabifyStyleName2(string) {
      return kebabify(string).replace(MS_RE, "-ms-");
    };
    exports.kebabifyStyleName = kebabifyStyleName;
    var recursiveMerge = function recursiveMerge2(a, b) {
      if (typeof a !== "object") {
        return b;
      }
      var ret = _extends2({}, a);
      Object.keys(b).forEach(function(key) {
        if (ret.hasOwnProperty(key)) {
          ret[key] = recursiveMerge2(a[key], b[key]);
        } else {
          ret[key] = b[key];
        }
      });
      return ret;
    };
    exports.recursiveMerge = recursiveMerge;
    var isUnitlessNumber = {
      animationIterationCount: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridRow: true,
      gridColumn: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true
    };
    function prefixKey(prefix, key) {
      return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    var prefixes = ["Webkit", "ms", "Moz", "O"];
    Object.keys(isUnitlessNumber).forEach(function(prop) {
      prefixes.forEach(function(prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
      });
    });
    var stringifyValue = function stringifyValue2(key, prop) {
      if (typeof prop === "number") {
        if (isUnitlessNumber[key]) {
          return "" + prop;
        } else {
          return prop + "px";
        }
      } else {
        return prop;
      }
    };
    exports.stringifyValue = stringifyValue;
    function murmurhash2_32_gc(str) {
      var l = str.length;
      var h = l;
      var i = 0;
      var k = void 0;
      while (l >= 4) {
        k = str.charCodeAt(i) & 255 | (str.charCodeAt(++i) & 255) << 8 | (str.charCodeAt(++i) & 255) << 16 | (str.charCodeAt(++i) & 255) << 24;
        k = (k & 65535) * 1540483477 + (((k >>> 16) * 1540483477 & 65535) << 16);
        k ^= k >>> 24;
        k = (k & 65535) * 1540483477 + (((k >>> 16) * 1540483477 & 65535) << 16);
        h = (h & 65535) * 1540483477 + (((h >>> 16) * 1540483477 & 65535) << 16) ^ k;
        l -= 4;
        ++i;
      }
      switch (l) {
        case 3:
          h ^= (str.charCodeAt(i + 2) & 255) << 16;
        case 2:
          h ^= (str.charCodeAt(i + 1) & 255) << 8;
        case 1:
          h ^= str.charCodeAt(i) & 255;
          h = (h & 65535) * 1540483477 + (((h >>> 16) * 1540483477 & 65535) << 16);
      }
      h ^= h >>> 13;
      h = (h & 65535) * 1540483477 + (((h >>> 16) * 1540483477 & 65535) << 16);
      h ^= h >>> 15;
      return (h >>> 0).toString(36);
    }
    var hashObject = function hashObject2(object) {
      return murmurhash2_32_gc(JSON.stringify(object));
    };
    exports.hashObject = hashObject;
    var IMPORTANT_RE = /^([^:]+:.*?)( !important)?;$/;
    var importantify = function importantify2(string) {
      return string.replace(IMPORTANT_RE, function(_, base, important) {
        return base + " !important;";
      });
    };
    exports.importantify = importantify;
  }
});

// node_modules/asap/browser-raw.js
var require_browser_raw = __commonJS({
  "node_modules/asap/browser-raw.js"(exports, module) {
    init_define_process_env();
    "use strict";
    module.exports = rawAsap;
    function rawAsap(task) {
      if (!queue.length) {
        requestFlush();
        flushing = true;
      }
      queue[queue.length] = task;
    }
    var queue = [];
    var flushing = false;
    var requestFlush;
    var index = 0;
    var capacity = 1024;
    function flush() {
      while (index < queue.length) {
        var currentIndex = index;
        index = index + 1;
        queue[currentIndex].call();
        if (index > capacity) {
          for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
            queue[scan] = queue[scan + index];
          }
          queue.length -= index;
          index = 0;
        }
      }
      queue.length = 0;
      index = 0;
      flushing = false;
    }
    var scope = typeof global !== "undefined" ? global : self;
    var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;
    if (typeof BrowserMutationObserver === "function") {
      requestFlush = makeRequestCallFromMutationObserver(flush);
    } else {
      requestFlush = makeRequestCallFromTimer(flush);
    }
    rawAsap.requestFlush = requestFlush;
    function makeRequestCallFromMutationObserver(callback) {
      var toggle = 1;
      var observer = new BrowserMutationObserver(callback);
      var node = document.createTextNode("");
      observer.observe(node, { characterData: true });
      return function requestCall() {
        toggle = -toggle;
        node.data = toggle;
      };
    }
    function makeRequestCallFromTimer(callback) {
      return function requestCall() {
        var timeoutHandle = setTimeout(handleTimer, 0);
        var intervalHandle = setInterval(handleTimer, 50);
        function handleTimer() {
          clearTimeout(timeoutHandle);
          clearInterval(intervalHandle);
          callback();
        }
      };
    }
    rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;
  }
});

// node_modules/asap/browser-asap.js
var require_browser_asap = __commonJS({
  "node_modules/asap/browser-asap.js"(exports, module) {
    init_define_process_env();
    "use strict";
    var rawAsap = require_browser_raw();
    var freeTasks = [];
    var pendingErrors = [];
    var requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);
    function throwFirstError() {
      if (pendingErrors.length) {
        throw pendingErrors.shift();
      }
    }
    module.exports = asap;
    function asap(task) {
      var rawTask;
      if (freeTasks.length) {
        rawTask = freeTasks.pop();
      } else {
        rawTask = new RawTask();
      }
      rawTask.task = task;
      rawAsap(rawTask);
    }
    function RawTask() {
      this.task = null;
    }
    RawTask.prototype.call = function() {
      try {
        this.task.call();
      } catch (error) {
        if (asap.onerror) {
          asap.onerror(error);
        } else {
          pendingErrors.push(error);
          requestErrorThrow();
        }
      } finally {
        this.task = null;
        freeTasks[freeTasks.length] = this;
      }
    };
  }
});

// node_modules/inline-style-prefixer/lib/static/prefixProps.js
var require_prefixProps = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/prefixProps.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = { "Webkit": { "transform": true, "transformOrigin": true, "transformOriginX": true, "transformOriginY": true, "backfaceVisibility": true, "perspective": true, "perspectiveOrigin": true, "transformStyle": true, "transformOriginZ": true, "animation": true, "animationDelay": true, "animationDirection": true, "animationFillMode": true, "animationDuration": true, "animationIterationCount": true, "animationName": true, "animationPlayState": true, "animationTimingFunction": true, "appearance": true, "userSelect": true, "fontKerning": true, "textEmphasisPosition": true, "textEmphasis": true, "textEmphasisStyle": true, "textEmphasisColor": true, "boxDecorationBreak": true, "clipPath": true, "maskImage": true, "maskMode": true, "maskRepeat": true, "maskPosition": true, "maskClip": true, "maskOrigin": true, "maskSize": true, "maskComposite": true, "mask": true, "maskBorderSource": true, "maskBorderMode": true, "maskBorderSlice": true, "maskBorderWidth": true, "maskBorderOutset": true, "maskBorderRepeat": true, "maskBorder": true, "maskType": true, "textDecorationStyle": true, "textDecorationSkip": true, "textDecorationLine": true, "textDecorationColor": true, "filter": true, "fontFeatureSettings": true, "breakAfter": true, "breakBefore": true, "breakInside": true, "columnCount": true, "columnFill": true, "columnGap": true, "columnRule": true, "columnRuleColor": true, "columnRuleStyle": true, "columnRuleWidth": true, "columns": true, "columnSpan": true, "columnWidth": true, "flex": true, "flexBasis": true, "flexDirection": true, "flexGrow": true, "flexFlow": true, "flexShrink": true, "flexWrap": true, "alignContent": true, "alignItems": true, "alignSelf": true, "justifyContent": true, "order": true, "transition": true, "transitionDelay": true, "transitionDuration": true, "transitionProperty": true, "transitionTimingFunction": true, "backdropFilter": true, "scrollSnapType": true, "scrollSnapPointsX": true, "scrollSnapPointsY": true, "scrollSnapDestination": true, "scrollSnapCoordinate": true, "shapeImageThreshold": true, "shapeImageMargin": true, "shapeImageOutside": true, "hyphens": true, "flowInto": true, "flowFrom": true, "regionFragment": true, "textSizeAdjust": true }, "Moz": { "appearance": true, "userSelect": true, "boxSizing": true, "textAlignLast": true, "textDecorationStyle": true, "textDecorationSkip": true, "textDecorationLine": true, "textDecorationColor": true, "tabSize": true, "hyphens": true, "fontFeatureSettings": true, "breakAfter": true, "breakBefore": true, "breakInside": true, "columnCount": true, "columnFill": true, "columnGap": true, "columnRule": true, "columnRuleColor": true, "columnRuleStyle": true, "columnRuleWidth": true, "columns": true, "columnSpan": true, "columnWidth": true }, "ms": { "flex": true, "flexBasis": false, "flexDirection": true, "flexGrow": false, "flexFlow": true, "flexShrink": false, "flexWrap": true, "alignContent": false, "alignItems": false, "alignSelf": false, "justifyContent": false, "order": false, "transform": true, "transformOrigin": true, "transformOriginX": true, "transformOriginY": true, "userSelect": true, "wrapFlow": true, "wrapThrough": true, "wrapMargin": true, "scrollSnapType": true, "scrollSnapPointsX": true, "scrollSnapPointsY": true, "scrollSnapDestination": true, "scrollSnapCoordinate": true, "touchAction": true, "hyphens": true, "flowInto": true, "flowFrom": true, "breakBefore": true, "breakAfter": true, "breakInside": true, "regionFragment": true, "gridTemplateColumns": true, "gridTemplateRows": true, "gridTemplateAreas": true, "gridTemplate": true, "gridAutoColumns": true, "gridAutoRows": true, "gridAutoFlow": true, "grid": true, "gridRowStart": true, "gridColumnStart": true, "gridRowEnd": true, "gridRow": true, "gridColumn": true, "gridColumnEnd": true, "gridColumnGap": true, "gridRowGap": true, "gridArea": true, "gridGap": true, "textSizeAdjust": true } };
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/utils/capitalizeString.js
var require_capitalizeString = __commonJS({
  "node_modules/inline-style-prefixer/lib/utils/capitalizeString.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = function(str) {
      return str.charAt(0).toUpperCase() + str.slice(1);
    };
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/utils/isPrefixedProperty.js
var require_isPrefixedProperty = __commonJS({
  "node_modules/inline-style-prefixer/lib/utils/isPrefixedProperty.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = function(property) {
      return property.match(/^(Webkit|Moz|O|ms)/) !== null;
    };
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/utils/sortPrefixedStyle.js
var require_sortPrefixedStyle = __commonJS({
  "node_modules/inline-style-prefixer/lib/utils/sortPrefixedStyle.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = sortPrefixedStyle;
    var _isPrefixedProperty = require_isPrefixedProperty();
    var _isPrefixedProperty2 = _interopRequireDefault(_isPrefixedProperty);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function sortPrefixedStyle(style) {
      return Object.keys(style).sort(function(left, right) {
        if ((0, _isPrefixedProperty2.default)(left) && !(0, _isPrefixedProperty2.default)(right)) {
          return -1;
        } else if (!(0, _isPrefixedProperty2.default)(left) && (0, _isPrefixedProperty2.default)(right)) {
          return 1;
        }
        return 0;
      }).reduce(function(sortedStyle, prop) {
        sortedStyle[prop] = style[prop];
        return sortedStyle;
      }, {});
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/position.js
var require_position = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/position.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = position;
    function position(property, value) {
      if (property === "position" && value === "sticky") {
        return { position: ["-webkit-sticky", "sticky"] };
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/utils/joinPrefixedValue.js
var require_joinPrefixedValue = __commonJS({
  "node_modules/inline-style-prefixer/lib/utils/joinPrefixedValue.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    exports.default = function(property, value) {
      var replacer = arguments.length <= 2 || arguments[2] === void 0 ? function(prefix, value2) {
        return prefix + value2;
      } : arguments[2];
      return _defineProperty({}, property, ["-webkit-", "-moz-", ""].map(function(prefix) {
        return replacer(prefix, value);
      }));
    };
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/utils/isPrefixedValue.js
var require_isPrefixedValue = __commonJS({
  "node_modules/inline-style-prefixer/lib/utils/isPrefixedValue.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = function(value) {
      if (Array.isArray(value))
        value = value.join(",");
      return value.match(/-webkit-|-moz-|-ms-/) !== null;
    };
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/calc.js
var require_calc = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/calc.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = calc;
    var _joinPrefixedValue = require_joinPrefixedValue();
    var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);
    var _isPrefixedValue = require_isPrefixedValue();
    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function calc(property, value) {
      if (typeof value === "string" && !(0, _isPrefixedValue2.default)(value) && value.indexOf("calc(") > -1) {
        return (0, _joinPrefixedValue2.default)(property, value, function(prefix, value2) {
          return value2.replace(/calc\(/g, prefix + "calc(");
        });
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/cursor.js
var require_cursor = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/cursor.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = cursor;
    var _joinPrefixedValue = require_joinPrefixedValue();
    var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var values = {
      "zoom-in": true,
      "zoom-out": true,
      grab: true,
      grabbing: true
    };
    function cursor(property, value) {
      if (property === "cursor" && values[value]) {
        return (0, _joinPrefixedValue2.default)(property, value);
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/flex.js
var require_flex = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/flex.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flex;
    var values = { flex: true, "inline-flex": true };
    function flex(property, value) {
      if (property === "display" && values[value]) {
        return {
          display: ["-webkit-box", "-moz-box", "-ms-" + value + "box", "-webkit-" + value, value]
        };
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/sizing.js
var require_sizing = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/sizing.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = sizing;
    var _joinPrefixedValue = require_joinPrefixedValue();
    var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var properties = {
      maxHeight: true,
      maxWidth: true,
      width: true,
      height: true,
      columnWidth: true,
      minWidth: true,
      minHeight: true
    };
    var values = {
      "min-content": true,
      "max-content": true,
      "fill-available": true,
      "fit-content": true,
      "contain-floats": true
    };
    function sizing(property, value) {
      if (properties[property] && values[value]) {
        return (0, _joinPrefixedValue2.default)(property, value);
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/gradient.js
var require_gradient = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/gradient.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = gradient;
    var _joinPrefixedValue = require_joinPrefixedValue();
    var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);
    var _isPrefixedValue = require_isPrefixedValue();
    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;
    function gradient(property, value) {
      if (typeof value === "string" && !(0, _isPrefixedValue2.default)(value) && value.match(values) !== null) {
        return (0, _joinPrefixedValue2.default)(property, value);
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/hyphenate-style-name/index.js
var hyphenate_style_name_exports = {};
__export(hyphenate_style_name_exports, {
  default: () => hyphenate_style_name_default
});
function toHyphenLower(match) {
  return "-" + match.toLowerCase();
}
function hyphenateStyleName(name) {
  if (cache.hasOwnProperty(name)) {
    return cache[name];
  }
  var hName = name.replace(uppercasePattern, toHyphenLower);
  return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
}
var uppercasePattern, msPattern, cache, hyphenate_style_name_default;
var init_hyphenate_style_name = __esm({
  "node_modules/hyphenate-style-name/index.js"() {
    init_define_process_env();
    uppercasePattern = /[A-Z]/g;
    msPattern = /^ms-/;
    cache = {};
    hyphenate_style_name_default = hyphenateStyleName;
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/transition.js
var require_transition = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/transition.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = transition;
    var _hyphenateStyleName = (init_hyphenate_style_name(), hyphenate_style_name_exports);
    var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
    var _capitalizeString = require_capitalizeString();
    var _capitalizeString2 = _interopRequireDefault(_capitalizeString);
    var _isPrefixedValue = require_isPrefixedValue();
    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);
    var _prefixProps = require_prefixProps();
    var _prefixProps2 = _interopRequireDefault(_prefixProps);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var properties = {
      transition: true,
      transitionProperty: true,
      WebkitTransition: true,
      WebkitTransitionProperty: true
    };
    function transition(property, value) {
      if (typeof value === "string" && properties[property]) {
        var _ref2;
        var outputValue = prefixValue(value);
        var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function(value2) {
          return value2.match(/-moz-|-ms-/) === null;
        }).join(",");
        if (property.indexOf("Webkit") > -1) {
          return _defineProperty({}, property, webkitOutput);
        }
        return _ref2 = {}, _defineProperty(_ref2, "Webkit" + (0, _capitalizeString2.default)(property), webkitOutput), _defineProperty(_ref2, property, outputValue), _ref2;
      }
    }
    function prefixValue(value) {
      if ((0, _isPrefixedValue2.default)(value)) {
        return value;
      }
      var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);
      multipleValues.forEach(function(val, index) {
        multipleValues[index] = Object.keys(_prefixProps2.default).reduce(function(out, prefix) {
          var dashCasePrefix = "-" + prefix.toLowerCase() + "-";
          Object.keys(_prefixProps2.default[prefix]).forEach(function(prop) {
            var dashCaseProperty = (0, _hyphenateStyleName2.default)(prop);
            if (val.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== "order") {
              out = val.replace(dashCaseProperty, dashCasePrefix + dashCaseProperty) + "," + out;
            }
          });
          return out;
        }, val);
      });
      return multipleValues.join(",");
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/flexboxIE.js
var require_flexboxIE = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/flexboxIE.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flexboxIE;
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var alternativeValues = {
      "space-around": "distribute",
      "space-between": "justify",
      "flex-start": "start",
      "flex-end": "end"
    };
    var alternativeProps = {
      alignContent: "msFlexLinePack",
      alignSelf: "msFlexItemAlign",
      alignItems: "msFlexAlign",
      justifyContent: "msFlexPack",
      order: "msFlexOrder",
      flexGrow: "msFlexPositive",
      flexShrink: "msFlexNegative",
      flexBasis: "msPreferredSize"
    };
    function flexboxIE(property, value) {
      if (alternativeProps[property]) {
        return _defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/plugins/flexboxOld.js
var require_flexboxOld = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/plugins/flexboxOld.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flexboxOld;
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var alternativeValues = {
      "space-around": "justify",
      "space-between": "justify",
      "flex-start": "start",
      "flex-end": "end",
      "wrap-reverse": "multiple",
      wrap: "multiple"
    };
    var alternativeProps = {
      alignItems: "WebkitBoxAlign",
      justifyContent: "WebkitBoxPack",
      flexWrap: "WebkitBoxLines"
    };
    function flexboxOld(property, value) {
      if (property === "flexDirection" && typeof value === "string") {
        return {
          WebkitBoxOrient: value.indexOf("column") > -1 ? "vertical" : "horizontal",
          WebkitBoxDirection: value.indexOf("reverse") > -1 ? "reverse" : "normal"
        };
      }
      if (alternativeProps[property]) {
        return _defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
      }
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/lib/static/prefixAll.js
var require_prefixAll = __commonJS({
  "node_modules/inline-style-prefixer/lib/static/prefixAll.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = prefixAll;
    var _prefixProps = require_prefixProps();
    var _prefixProps2 = _interopRequireDefault(_prefixProps);
    var _capitalizeString = require_capitalizeString();
    var _capitalizeString2 = _interopRequireDefault(_capitalizeString);
    var _sortPrefixedStyle = require_sortPrefixedStyle();
    var _sortPrefixedStyle2 = _interopRequireDefault(_sortPrefixedStyle);
    var _position = require_position();
    var _position2 = _interopRequireDefault(_position);
    var _calc = require_calc();
    var _calc2 = _interopRequireDefault(_calc);
    var _cursor = require_cursor();
    var _cursor2 = _interopRequireDefault(_cursor);
    var _flex = require_flex();
    var _flex2 = _interopRequireDefault(_flex);
    var _sizing = require_sizing();
    var _sizing2 = _interopRequireDefault(_sizing);
    var _gradient = require_gradient();
    var _gradient2 = _interopRequireDefault(_gradient);
    var _transition = require_transition();
    var _transition2 = _interopRequireDefault(_transition);
    var _flexboxIE = require_flexboxIE();
    var _flexboxIE2 = _interopRequireDefault(_flexboxIE);
    var _flexboxOld = require_flexboxOld();
    var _flexboxOld2 = _interopRequireDefault(_flexboxOld);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var plugins = [_position2.default, _calc2.default, _cursor2.default, _sizing2.default, _gradient2.default, _transition2.default, _flexboxIE2.default, _flexboxOld2.default, _flex2.default];
    function prefixAll(styles3) {
      Object.keys(styles3).forEach(function(property) {
        var value = styles3[property];
        if (value instanceof Object && !Array.isArray(value)) {
          styles3[property] = prefixAll(value);
        } else {
          Object.keys(_prefixProps2.default).forEach(function(prefix) {
            var properties = _prefixProps2.default[prefix];
            if (properties[property]) {
              styles3[prefix + (0, _capitalizeString2.default)(property)] = value;
            }
          });
        }
      });
      Object.keys(styles3).forEach(function(property) {
        [].concat(styles3[property]).forEach(function(value, index) {
          plugins.forEach(function(plugin) {
            return assignStyles(styles3, plugin(property, value));
          });
        });
      });
      return (0, _sortPrefixedStyle2.default)(styles3);
    }
    function assignStyles(base) {
      var extend = arguments.length <= 1 || arguments[1] === void 0 ? {} : arguments[1];
      Object.keys(extend).forEach(function(property) {
        var baseValue = base[property];
        if (Array.isArray(baseValue)) {
          [].concat(extend[property]).forEach(function(value) {
            var valueIndex = baseValue.indexOf(value);
            if (valueIndex > -1) {
              base[property].splice(valueIndex, 1);
            }
            base[property].push(value);
          });
        } else {
          base[property] = extend[property];
        }
      });
    }
    module.exports = exports["default"];
  }
});

// node_modules/inline-style-prefixer/static.js
var require_static = __commonJS({
  "node_modules/inline-style-prefixer/static.js"(exports, module) {
    init_define_process_env();
    module.exports = require_prefixAll();
  }
});

// node_modules/aphrodite/lib/generate.js
var require_generate = __commonJS({
  "node_modules/aphrodite/lib/generate.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _slicedToArray = function() {
      function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = void 0;
        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i)
              break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"])
              _i["return"]();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
      return function(arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
      };
    }();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var _inlineStylePrefixerStatic = require_static();
    var _inlineStylePrefixerStatic2 = _interopRequireDefault(_inlineStylePrefixerStatic);
    var _util = require_util();
    var generateCSS = function generateCSS2(selector, styleTypes, stringHandlers, useImportant) {
      var merged = styleTypes.reduce(_util.recursiveMerge);
      var declarations = {};
      var mediaQueries = {};
      var pseudoStyles = {};
      Object.keys(merged).forEach(function(key) {
        if (key[0] === ":") {
          pseudoStyles[key] = merged[key];
        } else if (key[0] === "@") {
          mediaQueries[key] = merged[key];
        } else {
          declarations[key] = merged[key];
        }
      });
      return generateCSSRuleset(selector, declarations, stringHandlers, useImportant) + Object.keys(pseudoStyles).map(function(pseudoSelector) {
        return generateCSSRuleset(selector + pseudoSelector, pseudoStyles[pseudoSelector], stringHandlers, useImportant);
      }).join("") + Object.keys(mediaQueries).map(function(mediaQuery) {
        var ruleset = generateCSS2(selector, [mediaQueries[mediaQuery]], stringHandlers, useImportant);
        return mediaQuery + "{" + ruleset + "}";
      }).join("");
    };
    exports.generateCSS = generateCSS;
    var runStringHandlers = function runStringHandlers2(declarations, stringHandlers) {
      var result = {};
      Object.keys(declarations).forEach(function(key) {
        if (stringHandlers && stringHandlers.hasOwnProperty(key)) {
          result[key] = stringHandlers[key](declarations[key]);
        } else {
          result[key] = declarations[key];
        }
      });
      return result;
    };
    var generateCSSRuleset = function generateCSSRuleset2(selector, declarations, stringHandlers, useImportant) {
      var handledDeclarations = runStringHandlers(declarations, stringHandlers);
      var prefixedDeclarations = (0, _inlineStylePrefixerStatic2["default"])(handledDeclarations);
      var prefixedRules = (0, _util.flatten)((0, _util.objectToPairs)(prefixedDeclarations).map(function(_ref) {
        var _ref2 = _slicedToArray(_ref, 2);
        var key = _ref2[0];
        var value = _ref2[1];
        if (Array.isArray(value)) {
          var _ret = function() {
            var prefixedValues = [];
            var unprefixedValues = [];
            value.forEach(function(v) {
              if (v.indexOf("-") === 0) {
                prefixedValues.push(v);
              } else {
                unprefixedValues.push(v);
              }
            });
            prefixedValues.sort();
            unprefixedValues.sort();
            return {
              v: prefixedValues.concat(unprefixedValues).map(function(v) {
                return [key, v];
              })
            };
          }();
          if (typeof _ret === "object")
            return _ret.v;
        }
        return [[key, value]];
      }));
      var rules = prefixedRules.map(function(_ref3) {
        var _ref32 = _slicedToArray(_ref3, 2);
        var key = _ref32[0];
        var value = _ref32[1];
        var stringValue = (0, _util.stringifyValue)(key, value);
        var ret = (0, _util.kebabifyStyleName)(key) + ":" + stringValue + ";";
        return useImportant === false ? ret : (0, _util.importantify)(ret);
      }).join("");
      if (rules) {
        return selector + "{" + rules + "}";
      } else {
        return "";
      }
    };
    exports.generateCSSRuleset = generateCSSRuleset;
  }
});

// node_modules/aphrodite/lib/inject.js
var require_inject = __commonJS({
  "node_modules/aphrodite/lib/inject.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var _asap = require_browser_asap();
    var _asap2 = _interopRequireDefault(_asap);
    var _generate = require_generate();
    var _util = require_util();
    var styleTag = null;
    var injectStyleTag = function injectStyleTag2(cssContents) {
      if (styleTag == null) {
        styleTag = document.querySelector("style[data-aphrodite]");
        if (styleTag == null) {
          var head = document.head || document.getElementsByTagName("head")[0];
          styleTag = document.createElement("style");
          styleTag.type = "text/css";
          styleTag.setAttribute("data-aphrodite", "");
          head.appendChild(styleTag);
        }
      }
      if (styleTag.styleSheet) {
        styleTag.styleSheet.cssText += cssContents;
      } else {
        styleTag.appendChild(document.createTextNode(cssContents));
      }
    };
    var stringHandlers = {
      fontFamily: function fontFamily(val) {
        if (Array.isArray(val)) {
          return val.map(fontFamily).join(",");
        } else if (typeof val === "object") {
          injectStyleOnce(val.fontFamily, "@font-face", [val], false);
          return '"' + val.fontFamily + '"';
        } else {
          return val;
        }
      },
      animationName: function animationName(val) {
        if (typeof val !== "object") {
          return val;
        }
        var name = "keyframe_" + (0, _util.hashObject)(val);
        var finalVal = "@keyframes " + name + "{";
        Object.keys(val).forEach(function(key) {
          finalVal += (0, _generate.generateCSS)(key, [val[key]], stringHandlers, false);
        });
        finalVal += "}";
        injectGeneratedCSSOnce(name, finalVal);
        return name;
      }
    };
    var alreadyInjected = {};
    var injectionBuffer = "";
    var isBuffering = false;
    var injectGeneratedCSSOnce = function injectGeneratedCSSOnce2(key, generatedCSS) {
      if (!alreadyInjected[key]) {
        if (!isBuffering) {
          if (typeof document === "undefined") {
            throw new Error("Cannot automatically buffer without a document");
          }
          isBuffering = true;
          (0, _asap2["default"])(flushToStyleTag);
        }
        injectionBuffer += generatedCSS;
        alreadyInjected[key] = true;
      }
    };
    var injectStyleOnce = function injectStyleOnce2(key, selector, definitions, useImportant) {
      if (!alreadyInjected[key]) {
        var generated = (0, _generate.generateCSS)(selector, definitions, stringHandlers, useImportant);
        injectGeneratedCSSOnce(key, generated);
      }
    };
    exports.injectStyleOnce = injectStyleOnce;
    var reset = function reset2() {
      injectionBuffer = "";
      alreadyInjected = {};
      isBuffering = false;
      styleTag = null;
    };
    exports.reset = reset;
    var startBuffering = function startBuffering2() {
      if (isBuffering) {
        throw new Error("Cannot buffer while already buffering");
      }
      isBuffering = true;
    };
    exports.startBuffering = startBuffering;
    var flushToString = function flushToString2() {
      isBuffering = false;
      var ret = injectionBuffer;
      injectionBuffer = "";
      return ret;
    };
    exports.flushToString = flushToString;
    var flushToStyleTag = function flushToStyleTag2() {
      var cssContent = flushToString();
      if (cssContent.length > 0) {
        injectStyleTag(cssContent);
      }
    };
    exports.flushToStyleTag = flushToStyleTag;
    var getRenderedClassNames = function getRenderedClassNames2() {
      return Object.keys(alreadyInjected);
    };
    exports.getRenderedClassNames = getRenderedClassNames;
    var addRenderedClassNames = function addRenderedClassNames2(classNames) {
      classNames.forEach(function(className) {
        alreadyInjected[className] = true;
      });
    };
    exports.addRenderedClassNames = addRenderedClassNames;
    var injectAndGetClassName = function injectAndGetClassName2(useImportant, styleDefinitions) {
      var validDefinitions = styleDefinitions.filter(function(def) {
        return def;
      });
      if (validDefinitions.length === 0) {
        return "";
      }
      var className = validDefinitions.map(function(s) {
        return s._name;
      }).join("-o_O-");
      injectStyleOnce(className, "." + className, validDefinitions.map(function(d) {
        return d._definition;
      }), useImportant);
      return className;
    };
    exports.injectAndGetClassName = injectAndGetClassName;
  }
});

// node_modules/aphrodite/lib/index.js
var require_lib = __commonJS({
  "node_modules/aphrodite/lib/index.js"(exports, module) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _slicedToArray = function() {
      function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = void 0;
        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i)
              break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"])
              _i["return"]();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
      return function(arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
      };
    }();
    var _util = require_util();
    var _inject = require_inject();
    var StyleSheet2 = {
      create: function create(sheetDefinition) {
        return (0, _util.mapObj)(sheetDefinition, function(_ref) {
          var _ref2 = _slicedToArray(_ref, 2);
          var key = _ref2[0];
          var val = _ref2[1];
          return [key, {
            _name: key + "_" + (0, _util.hashObject)(val),
            _definition: val
          }];
        });
      },
      rehydrate: function rehydrate() {
        var renderedClassNames = arguments.length <= 0 || arguments[0] === void 0 ? [] : arguments[0];
        (0, _inject.addRenderedClassNames)(renderedClassNames);
      }
    };
    var StyleSheetServer = {
      renderStatic: function renderStatic(renderFunc) {
        (0, _inject.reset)();
        (0, _inject.startBuffering)();
        var html = renderFunc();
        var cssContent = (0, _inject.flushToString)();
        return {
          html,
          css: {
            content: cssContent,
            renderedClassNames: (0, _inject.getRenderedClassNames)()
          }
        };
      }
    };
    var StyleSheetTestUtils = {
      suppressStyleInjection: function suppressStyleInjection() {
        (0, _inject.reset)();
        (0, _inject.startBuffering)();
      },
      clearBufferAndResumeStyleInjection: function clearBufferAndResumeStyleInjection() {
        (0, _inject.reset)();
      }
    };
    var css2 = function css3() {
      for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {
        styleDefinitions[_key] = arguments[_key];
      }
      var useImportant = true;
      return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions);
    };
    exports["default"] = {
      StyleSheet: StyleSheet2,
      StyleSheetServer,
      StyleSheetTestUtils,
      css: css2
    };
    module.exports = exports["default"];
  }
});

// node_modules/exenv/index.js
var require_exenv = __commonJS({
  "node_modules/exenv/index.js"(exports, module) {
    init_define_process_env();
    (function() {
      "use strict";
      var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
      var ExecutionEnvironment = {
        canUseDOM,
        canUseWorkers: typeof Worker !== "undefined",
        canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
        canUseViewport: canUseDOM && !!window.screen
      };
      if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define(function() {
          return ExecutionEnvironment;
        });
      } else if (typeof module !== "undefined" && module.exports) {
        module.exports = ExecutionEnvironment;
      } else {
        window.ExecutionEnvironment = ExecutionEnvironment;
      }
    })();
  }
});

// node_modules/react-scrolllock/node_modules/react-prop-toggle/dist/PropToggle.js
var require_PropToggle = __commonJS({
  "node_modules/react-scrolllock/node_modules/react-prop-toggle/dist/PropToggle.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultProps = void 0;
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var defaultProps = exports.defaultProps = {
      attributes: {},
      styles: {}
    };
    var PropToggle = function(_PureComponent) {
      _inherits(PropToggle2, _PureComponent);
      function PropToggle2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, PropToggle2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PropToggle2.__proto__ || Object.getPrototypeOf(PropToggle2)).call.apply(_ref, [this].concat(args))), _this), _this.originalAttributes = {}, _this.originalStyles = {}, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(PropToggle2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;
          var _props = this.props, attributes = _props.attributes, styles3 = _props.styles, _props$target = _props.target, target = _props$target === void 0 ? document.body : _props$target;
          if (!target)
            return;
          this.attributeKeys = Object.keys(attributes);
          this.styleKeys = Object.keys(styles3);
          if (this.styleKeys.length) {
            this.styleKeys.forEach(function(k) {
              _this2.originalStyles[k] = target.style.getPropertyValue(k);
              target.style.setProperty(k, styles3[k]);
            });
          }
          if (this.attributeKeys.length) {
            this.attributeKeys.forEach(function(k) {
              _this2.originalAttributes[k] = target.getAttribute(k) || "";
              target.setAttribute(k, attributes[k]);
            });
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          var _this3 = this;
          var _props$target2 = this.props.target, target = _props$target2 === void 0 ? document.body : _props$target2;
          if (!target)
            return;
          if (this.styleKeys.length) {
            this.styleKeys.forEach(function(k) {
              target.style.setProperty(k, _this3.originalStyles[k]);
            });
          }
          if (this.attributeKeys.length) {
            this.attributeKeys.forEach(function(k) {
              if (_this3.originalAttributes[k]) {
                target.setAttribute(k, _this3.originalAttributes[k]);
              } else {
                target.removeAttribute(k);
              }
            });
          }
        }
      }, {
        key: "render",
        value: function render2() {
          return null;
        }
      }]);
      return PropToggle2;
    }(_react.PureComponent);
    PropToggle.defaultProps = defaultProps;
    exports.default = PropToggle;
  }
});

// node_modules/react-scrolllock/node_modules/react-prop-toggle/dist/LifeCycleProvider.js
var require_LifeCycleProvider = __commonJS({
  "node_modules/react-scrolllock/node_modules/react-prop-toggle/dist/LifeCycleProvider.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _PropToggle = require_PropToggle();
    var _PropToggle2 = _interopRequireDefault(_PropToggle);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    var LifeCycleProvider = function LifeCycleProvider2(_ref) {
      var isActive = _ref.isActive, props = _objectWithoutProperties(_ref, ["isActive"]);
      return isActive ? _react2.default.createElement(_PropToggle2.default, props) : null;
    };
    LifeCycleProvider.defaultProps = _PropToggle.defaultProps;
    exports.default = LifeCycleProvider;
  }
});

// node_modules/react-scrolllock/node_modules/react-prop-toggle/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-scrolllock/node_modules/react-prop-toggle/dist/index.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _LifeCycleProvider = require_LifeCycleProvider();
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_LifeCycleProvider).default;
      }
    });
    var _PropToggle = require_PropToggle();
    Object.defineProperty(exports, "SimpleToggle", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_PropToggle).default;
      }
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/react-scrolllock/dist/utils.js
var require_utils = __commonJS({
  "node_modules/react-scrolllock/dist/utils.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.preventTouchMove = preventTouchMove;
    exports.allowTouchMove = allowTouchMove;
    exports.preventInertiaScroll = preventInertiaScroll;
    exports.isTouchDevice = isTouchDevice;
    exports.getPadding = getPadding;
    exports.camelToKebab = camelToKebab;
    exports.getWindowHeight = getWindowHeight;
    exports.getDocumentHeight = getDocumentHeight;
    exports.parse = parse;
    function preventTouchMove(e) {
      e.preventDefault();
    }
    function allowTouchMove(e) {
      e.stopPropagation();
    }
    function preventInertiaScroll() {
      var top = this.scrollTop;
      var totalScroll = this.scrollHeight;
      var currentScroll = top + this.offsetHeight;
      if (top === 0) {
        this.scrollTop = 1;
      } else if (currentScroll === totalScroll) {
        this.scrollTop = top - 1;
      }
    }
    function isTouchDevice() {
      if (!window)
        return false;
      return "ontouchstart" in window || navigator.maxTouchPoints;
    }
    function getPadding() {
      if (!document || !window)
        return 0;
      var currentPadding = parseInt(document.body.paddingRight, 10) || 0;
      var clientWidth = document.body ? document.body.clientWidth : 0;
      var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;
      return adjustedPadding;
    }
    function camelToKebab(str) {
      return str.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
    }
    function getWindowHeight() {
      var multiplier = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
      if (window && window.innerHeight) {
        return window.innerHeight * multiplier;
      }
    }
    function getDocumentHeight() {
      if (document && document.body) {
        return document.body.clientHeight;
      }
    }
    function parse(val) {
      return isNaN(val) ? val : val + "px";
    }
  }
});

// node_modules/react-scrolllock/dist/withTouchListeners.js
var require_withTouchListeners = __commonJS({
  "node_modules/react-scrolllock/dist/withTouchListeners.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    exports.default = withTouchListeners;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _exenv = require_exenv();
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function withTouchListeners(WrappedComponent) {
      return function(_PureComponent) {
        _inherits(TouchProvider, _PureComponent);
        function TouchProvider() {
          var _ref;
          var _temp, _this, _ret;
          _classCallCheck(this, TouchProvider);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TouchProvider.__proto__ || Object.getPrototypeOf(TouchProvider)).call.apply(_ref, [this].concat(args))), _this), _this.listenerOptions = {
            capture: false,
            passive: false
          }, _temp), _possibleConstructorReturn(_this, _ret);
        }
        _createClass(TouchProvider, [{
          key: "componentDidMount",
          value: function componentDidMount() {
            if (!_exenv.canUseDOM)
              return;
            var touchScrollTarget = this.props.touchScrollTarget;
            var target = document.body;
            if (target && (0, _utils.isTouchDevice)()) {
              target.addEventListener("touchmove", _utils.preventTouchMove, this.listenerOptions);
              if (touchScrollTarget) {
                touchScrollTarget.addEventListener("touchstart", _utils.preventInertiaScroll, this.listenerOptions);
                touchScrollTarget.addEventListener("touchmove", _utils.allowTouchMove, this.listenerOptions);
              }
            }
          }
        }, {
          key: "componentWillUnmount",
          value: function componentWillUnmount() {
            if (!_exenv.canUseDOM)
              return;
            var touchScrollTarget = this.props.touchScrollTarget;
            var target = document.body;
            if (target && (0, _utils.isTouchDevice)()) {
              target.removeEventListener("touchmove", _utils.preventTouchMove, this.listenerOptions);
              if (touchScrollTarget) {
                touchScrollTarget.removeEventListener("touchstart", _utils.preventInertiaScroll, this.listenerOptions);
                touchScrollTarget.removeEventListener("touchmove", _utils.allowTouchMove, this.listenerOptions);
              }
            }
          }
        }, {
          key: "render",
          value: function render2() {
            return _react2.default.createElement(WrappedComponent, this.props);
          }
        }]);
        return TouchProvider;
      }(_react.PureComponent);
    }
  }
});

// node_modules/react-scrolllock/dist/ScrollLock.js
var require_ScrollLock = __commonJS({
  "node_modules/react-scrolllock/dist/ScrollLock.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _exenv = require_exenv();
    var _reactPropToggle = require_dist();
    var _utils = require_utils();
    var _withTouchListeners = require_withTouchListeners();
    var _withTouchListeners2 = _interopRequireDefault(_withTouchListeners);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var LOCK_COUNT = 0;
    var ScrollLock2 = function(_PureComponent) {
      _inherits(ScrollLock3, _PureComponent);
      function ScrollLock3() {
        _classCallCheck(this, ScrollLock3);
        return _possibleConstructorReturn(this, (ScrollLock3.__proto__ || Object.getPrototypeOf(ScrollLock3)).apply(this, arguments));
      }
      _createClass(ScrollLock3, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          LOCK_COUNT++;
          if (_exenv.canUseDOM) {
            this.initialHeight = window.innerHeight;
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          LOCK_COUNT = Math.max(LOCK_COUNT - 1, 0);
          if (_exenv.canUseDOM) {
            var offset = window.innerHeight - this.initialHeight;
            if (offset) {
              window.scrollTo(0, window.pageYOffset + offset);
            }
          }
          this.initialHeight = window.innerHeight;
        }
      }, {
        key: "render",
        value: function render2() {
          var accountForScrollbars = this.props.accountForScrollbars;
          var scrollbarSpacer = accountForScrollbars && LOCK_COUNT < 1 ? { "padding-right": (0, _utils.getPadding)() + "px" } : {};
          var height = (0, _utils.getDocumentHeight)() + "px";
          return _react2.default.createElement(_reactPropToggle.SimpleToggle, {
            styles: _extends2({
              "box-sizing": "border-box",
              overflow: "hidden",
              position: "relative",
              height
            }, scrollbarSpacer)
          });
        }
      }]);
      return ScrollLock3;
    }(_react.PureComponent);
    ScrollLock2.defaultProps = {
      accountForScrollbars: true
    };
    exports.default = (0, _withTouchListeners2.default)(ScrollLock2);
  }
});

// node_modules/react-scrolllock/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/react-scrolllock/dist/index.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _ScrollLock = require_ScrollLock();
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_ScrollLock).default;
      }
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/aphrodite/lib/no-important.js
var require_no_important = __commonJS({
  "node_modules/aphrodite/lib/no-important.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _inject = require_inject();
    var _indexJs = require_lib();
    var css2 = function css3() {
      for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {
        styleDefinitions[_key] = arguments[_key];
      }
      var useImportant = false;
      return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions);
    };
    exports.StyleSheet = _indexJs.StyleSheet;
    exports.StyleSheetServer = _indexJs.StyleSheetServer;
    exports.StyleSheetTestUtils = _indexJs.StyleSheetTestUtils;
    exports.css = css2;
  }
});

// node_modules/aphrodite/no-important.js
var require_no_important2 = __commonJS({
  "node_modules/aphrodite/no-important.js"(exports, module) {
    init_define_process_env();
    module.exports = require_no_important();
  }
});

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    init_define_process_env();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/react-grid-gallery/node_modules/dom-helpers/class/hasClass.js
var require_hasClass = __commonJS({
  "node_modules/react-grid-gallery/node_modules/dom-helpers/class/hasClass.js"(exports, module) {
    init_define_process_env();
    "use strict";
    exports.__esModule = true;
    exports.default = hasClass;
    function hasClass(element, className) {
      if (element.classList)
        return !!className && element.classList.contains(className);
      else
        return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-grid-gallery/node_modules/dom-helpers/class/addClass.js
var require_addClass = __commonJS({
  "node_modules/react-grid-gallery/node_modules/dom-helpers/class/addClass.js"(exports, module) {
    init_define_process_env();
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = addClass;
    var _hasClass = _interopRequireDefault(require_hasClass());
    function addClass(element, className) {
      if (element.classList)
        element.classList.add(className);
      else if (!(0, _hasClass.default)(element, className))
        if (typeof element.className === "string")
          element.className = element.className + " " + className;
        else
          element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-grid-gallery/node_modules/dom-helpers/class/removeClass.js
var require_removeClass = __commonJS({
  "node_modules/react-grid-gallery/node_modules/dom-helpers/class/removeClass.js"(exports, module) {
    init_define_process_env();
    "use strict";
    function replaceClassName(origClass, classToRemove) {
      return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
    }
    module.exports = function removeClass(element, className) {
      if (element.classList)
        element.classList.remove(className);
      else if (typeof element.className === "string")
        element.className = replaceClassName(element.className, className);
      else
        element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
    };
  }
});

// node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js
var react_lifecycles_compat_es_exports = {};
__export(react_lifecycles_compat_es_exports, {
  polyfill: () => polyfill
});
function componentWillMount() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
function polyfill(Component2) {
  var prototype = Component2.prototype;
  if (!prototype || !prototype.isReactComponent) {
    throw new Error("Can only polyfill class components");
  }
  if (typeof Component2.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") {
    return Component2;
  }
  var foundWillMountName = null;
  var foundWillReceivePropsName = null;
  var foundWillUpdateName = null;
  if (typeof prototype.componentWillMount === "function") {
    foundWillMountName = "componentWillMount";
  } else if (typeof prototype.UNSAFE_componentWillMount === "function") {
    foundWillMountName = "UNSAFE_componentWillMount";
  }
  if (typeof prototype.componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "componentWillReceiveProps";
  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") {
    foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
  }
  if (typeof prototype.componentWillUpdate === "function") {
    foundWillUpdateName = "componentWillUpdate";
  } else if (typeof prototype.UNSAFE_componentWillUpdate === "function") {
    foundWillUpdateName = "UNSAFE_componentWillUpdate";
  }
  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
    var componentName = Component2.displayName || Component2.name;
    var newApiName = typeof Component2.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
    throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks");
  }
  if (typeof Component2.getDerivedStateFromProps === "function") {
    prototype.componentWillMount = componentWillMount;
    prototype.componentWillReceiveProps = componentWillReceiveProps;
  }
  if (typeof prototype.getSnapshotBeforeUpdate === "function") {
    if (typeof prototype.componentDidUpdate !== "function") {
      throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
    }
    prototype.componentWillUpdate = componentWillUpdate;
    var componentDidUpdate = prototype.componentDidUpdate;
    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
      componentDidUpdate.call(this, prevProps, prevState, snapshot);
    };
  }
  return Component2;
}
var init_react_lifecycles_compat_es = __esm({
  "node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js"() {
    init_define_process_env();
    componentWillMount.__suppressDeprecationWarning = true;
    componentWillReceiveProps.__suppressDeprecationWarning = true;
    componentWillUpdate.__suppressDeprecationWarning = true;
  }
});

// node_modules/react-grid-gallery/node_modules/react-transition-group/utils/PropTypes.js
var require_PropTypes = __commonJS({
  "node_modules/react-grid-gallery/node_modules/react-transition-group/utils/PropTypes.js"(exports) {
    init_define_process_env();
    "use strict";
    exports.__esModule = true;
    exports.classNamesShape = exports.timeoutsShape = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var timeoutsShape = true ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
      enter: _propTypes.default.number,
      exit: _propTypes.default.number,
      appear: _propTypes.default.number
    }).isRequired]) : null;
    exports.timeoutsShape = timeoutsShape;
    var classNamesShape = true ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
      enter: _propTypes.default.string,
      exit: _propTypes.default.string,
      active: _propTypes.default.string
    }), _propTypes.default.shape({
      enter: _propTypes.default.string,
      enterDone: _propTypes.default.string,
      enterActive: _propTypes.default.string,
      exit: _propTypes.default.string,
      exitDone: _propTypes.default.string,
      exitActive: _propTypes.default.string
    })]) : null;
    exports.classNamesShape = classNamesShape;
  }
});

// node_modules/react-grid-gallery/node_modules/react-transition-group/Transition.js
var require_Transition = __commonJS({
  "node_modules/react-grid-gallery/node_modules/react-transition-group/Transition.js"(exports) {
    init_define_process_env();
    "use strict";
    exports.__esModule = true;
    exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;
    var PropTypes2 = _interopRequireWildcard(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactDom = _interopRequireDefault(require_react_dom());
    var _reactLifecyclesCompat = (init_react_lifecycles_compat_es(), react_lifecycles_compat_es_exports);
    var _PropTypes = require_PropTypes();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var UNMOUNTED = "unmounted";
    exports.UNMOUNTED = UNMOUNTED;
    var EXITED = "exited";
    exports.EXITED = EXITED;
    var ENTERING = "entering";
    exports.ENTERING = ENTERING;
    var ENTERED = "entered";
    exports.ENTERED = ENTERED;
    var EXITING = "exiting";
    exports.EXITING = EXITING;
    var Transition = function(_React$Component) {
      _inheritsLoose(Transition2, _React$Component);
      function Transition2(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context.transitionGroup;
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
          if (appear) {
            initialStatus = EXITED;
            _this.appearStatus = ENTERING;
          } else {
            initialStatus = ENTERED;
          }
        } else {
          if (props.unmountOnExit || props.mountOnEnter) {
            initialStatus = UNMOUNTED;
          } else {
            initialStatus = EXITED;
          }
        }
        _this.state = {
          status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
      }
      var _proto = Transition2.prototype;
      _proto.getChildContext = function getChildContext() {
        return {
          transitionGroup: null
        };
      };
      Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) {
          return {
            status: EXITED
          };
        }
        return null;
      };
      _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
      };
      _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
          var status = this.state.status;
          if (this.props.in) {
            if (status !== ENTERING && status !== ENTERED) {
              nextStatus = ENTERING;
            }
          } else {
            if (status === ENTERING || status === ENTERED) {
              nextStatus = EXITING;
            }
          }
        }
        this.updateStatus(false, nextStatus);
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
      };
      _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== "number") {
          exit = timeout.exit;
          enter = timeout.enter;
          appear = timeout.appear !== void 0 ? timeout.appear : enter;
        }
        return {
          exit,
          enter,
          appear
        };
      };
      _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) {
          mounting = false;
        }
        if (nextStatus !== null) {
          this.cancelNextCallback();
          var node = _reactDom.default.findDOMNode(this);
          if (nextStatus === ENTERING) {
            this.performEnter(node, mounting);
          } else {
            this.performExit(node);
          }
        } else if (this.props.unmountOnExit && this.state.status === EXITED) {
          this.setState({
            status: UNMOUNTED
          });
        }
      };
      _proto.performEnter = function performEnter(node, mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
        if (!mounting && !enter) {
          this.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(node);
          });
          return;
        }
        this.props.onEnter(node, appearing);
        this.safeSetState({
          status: ENTERING
        }, function() {
          _this2.props.onEntering(node, appearing);
          _this2.onTransitionEnd(node, enterTimeout, function() {
            _this2.safeSetState({
              status: ENTERED
            }, function() {
              _this2.props.onEntered(node, appearing);
            });
          });
        });
      };
      _proto.performExit = function performExit(node) {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        if (!exit) {
          this.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(node);
          });
          return;
        }
        this.props.onExit(node);
        this.safeSetState({
          status: EXITING
        }, function() {
          _this3.props.onExiting(node);
          _this3.onTransitionEnd(node, timeouts.exit, function() {
            _this3.safeSetState({
              status: EXITED
            }, function() {
              _this3.props.onExited(node);
            });
          });
        });
      };
      _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
          this.nextCallback.cancel();
          this.nextCallback = null;
        }
      };
      _proto.safeSetState = function safeSetState(nextState, callback) {
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
      };
      _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
          if (active) {
            active = false;
            _this4.nextCallback = null;
            callback(event);
          }
        };
        this.nextCallback.cancel = function() {
          active = false;
        };
        return this.nextCallback;
      };
      _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
        this.setNextCallback(handler);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
          setTimeout(this.nextCallback, 0);
          return;
        }
        if (this.props.addEndListener) {
          this.props.addEndListener(node, this.nextCallback);
        }
        if (timeout != null) {
          setTimeout(this.nextCallback, timeout);
        }
      };
      _proto.render = function render2() {
        var status = this.state.status;
        if (status === UNMOUNTED) {
          return null;
        }
        var _this$props = this.props, children = _this$props.children, childProps = _objectWithoutPropertiesLoose(_this$props, ["children"]);
        delete childProps.in;
        delete childProps.mountOnEnter;
        delete childProps.unmountOnExit;
        delete childProps.appear;
        delete childProps.enter;
        delete childProps.exit;
        delete childProps.timeout;
        delete childProps.addEndListener;
        delete childProps.onEnter;
        delete childProps.onEntering;
        delete childProps.onEntered;
        delete childProps.onExit;
        delete childProps.onExiting;
        delete childProps.onExited;
        if (typeof children === "function") {
          return children(status, childProps);
        }
        var child = _react.default.Children.only(children);
        return _react.default.cloneElement(child, childProps);
      };
      return Transition2;
    }(_react.default.Component);
    Transition.contextTypes = {
      transitionGroup: PropTypes2.object
    };
    Transition.childContextTypes = {
      transitionGroup: function transitionGroup() {
      }
    };
    Transition.propTypes = true ? {
      children: PropTypes2.oneOfType([PropTypes2.func.isRequired, PropTypes2.element.isRequired]).isRequired,
      in: PropTypes2.bool,
      mountOnEnter: PropTypes2.bool,
      unmountOnExit: PropTypes2.bool,
      appear: PropTypes2.bool,
      enter: PropTypes2.bool,
      exit: PropTypes2.bool,
      timeout: function timeout(props) {
        var pt = _PropTypes.timeoutsShape;
        if (!props.addEndListener)
          pt = pt.isRequired;
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        return pt.apply(void 0, [props].concat(args));
      },
      addEndListener: PropTypes2.func,
      onEnter: PropTypes2.func,
      onEntering: PropTypes2.func,
      onEntered: PropTypes2.func,
      onExit: PropTypes2.func,
      onExiting: PropTypes2.func,
      onExited: PropTypes2.func
    } : {};
    function noop() {
    }
    Transition.defaultProps = {
      in: false,
      mountOnEnter: false,
      unmountOnExit: false,
      appear: false,
      enter: true,
      exit: true,
      onEnter: noop,
      onEntering: noop,
      onEntered: noop,
      onExit: noop,
      onExiting: noop,
      onExited: noop
    };
    Transition.UNMOUNTED = 0;
    Transition.EXITED = 1;
    Transition.ENTERING = 2;
    Transition.ENTERED = 3;
    Transition.EXITING = 4;
    var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);
    exports.default = _default;
  }
});

// node_modules/react-grid-gallery/node_modules/react-transition-group/CSSTransition.js
var require_CSSTransition = __commonJS({
  "node_modules/react-grid-gallery/node_modules/react-transition-group/CSSTransition.js"(exports, module) {
    init_define_process_env();
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var PropTypes2 = _interopRequireWildcard(require_prop_types());
    var _addClass = _interopRequireDefault(require_addClass());
    var _removeClass = _interopRequireDefault(require_removeClass());
    var _react = _interopRequireDefault(require_react());
    var _Transition = _interopRequireDefault(require_Transition());
    var _PropTypes = require_PropTypes();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var addClass = function addClass2(node, classes2) {
      return node && classes2 && classes2.split(" ").forEach(function(c) {
        return (0, _addClass.default)(node, c);
      });
    };
    var removeClass = function removeClass2(node, classes2) {
      return node && classes2 && classes2.split(" ").forEach(function(c) {
        return (0, _removeClass.default)(node, c);
      });
    };
    var CSSTransition2 = function(_React$Component) {
      _inheritsLoose(CSSTransition3, _React$Component);
      function CSSTransition3() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.onEnter = function(node, appearing) {
          var _this$getClassNames = _this.getClassNames(appearing ? "appear" : "enter"), className = _this$getClassNames.className;
          _this.removeClasses(node, "exit");
          addClass(node, className);
          if (_this.props.onEnter) {
            _this.props.onEnter(node, appearing);
          }
        };
        _this.onEntering = function(node, appearing) {
          var _this$getClassNames2 = _this.getClassNames(appearing ? "appear" : "enter"), activeClassName = _this$getClassNames2.activeClassName;
          _this.reflowAndAddClass(node, activeClassName);
          if (_this.props.onEntering) {
            _this.props.onEntering(node, appearing);
          }
        };
        _this.onEntered = function(node, appearing) {
          var appearClassName = _this.getClassNames("appear").doneClassName;
          var enterClassName = _this.getClassNames("enter").doneClassName;
          var doneClassName = appearing ? appearClassName + " " + enterClassName : enterClassName;
          _this.removeClasses(node, appearing ? "appear" : "enter");
          addClass(node, doneClassName);
          if (_this.props.onEntered) {
            _this.props.onEntered(node, appearing);
          }
        };
        _this.onExit = function(node) {
          var _this$getClassNames3 = _this.getClassNames("exit"), className = _this$getClassNames3.className;
          _this.removeClasses(node, "appear");
          _this.removeClasses(node, "enter");
          addClass(node, className);
          if (_this.props.onExit) {
            _this.props.onExit(node);
          }
        };
        _this.onExiting = function(node) {
          var _this$getClassNames4 = _this.getClassNames("exit"), activeClassName = _this$getClassNames4.activeClassName;
          _this.reflowAndAddClass(node, activeClassName);
          if (_this.props.onExiting) {
            _this.props.onExiting(node);
          }
        };
        _this.onExited = function(node) {
          var _this$getClassNames5 = _this.getClassNames("exit"), doneClassName = _this$getClassNames5.doneClassName;
          _this.removeClasses(node, "exit");
          addClass(node, doneClassName);
          if (_this.props.onExited) {
            _this.props.onExited(node);
          }
        };
        _this.getClassNames = function(type) {
          var classNames = _this.props.classNames;
          var isStringClassNames = typeof classNames === "string";
          var prefix = isStringClassNames && classNames ? classNames + "-" : "";
          var className = isStringClassNames ? prefix + type : classNames[type];
          var activeClassName = isStringClassNames ? className + "-active" : classNames[type + "Active"];
          var doneClassName = isStringClassNames ? className + "-done" : classNames[type + "Done"];
          return {
            className,
            activeClassName,
            doneClassName
          };
        };
        return _this;
      }
      var _proto = CSSTransition3.prototype;
      _proto.removeClasses = function removeClasses(node, type) {
        var _this$getClassNames6 = this.getClassNames(type), className = _this$getClassNames6.className, activeClassName = _this$getClassNames6.activeClassName, doneClassName = _this$getClassNames6.doneClassName;
        className && removeClass(node, className);
        activeClassName && removeClass(node, activeClassName);
        doneClassName && removeClass(node, doneClassName);
      };
      _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
        if (className) {
          node && node.scrollTop;
          addClass(node, className);
        }
      };
      _proto.render = function render2() {
        var props = _extends2({}, this.props);
        delete props.classNames;
        return _react.default.createElement(_Transition.default, _extends2({}, props, {
          onEnter: this.onEnter,
          onEntered: this.onEntered,
          onEntering: this.onEntering,
          onExit: this.onExit,
          onExiting: this.onExiting,
          onExited: this.onExited
        }));
      };
      return CSSTransition3;
    }(_react.default.Component);
    CSSTransition2.defaultProps = {
      classNames: ""
    };
    CSSTransition2.propTypes = true ? _extends2({}, _Transition.default.propTypes, {
      classNames: _PropTypes.classNamesShape,
      onEnter: PropTypes2.func,
      onEntering: PropTypes2.func,
      onEntered: PropTypes2.func,
      onExit: PropTypes2.func,
      onExiting: PropTypes2.func,
      onExited: PropTypes2.func
    }) : {};
    var _default = CSSTransition2;
    exports.default = _default;
    module.exports = exports["default"];
  }
});

// node_modules/react-grid-gallery/node_modules/react-transition-group/utils/ChildMapping.js
var require_ChildMapping = __commonJS({
  "node_modules/react-grid-gallery/node_modules/react-transition-group/utils/ChildMapping.js"(exports) {
    init_define_process_env();
    "use strict";
    exports.__esModule = true;
    exports.getChildMapping = getChildMapping;
    exports.mergeChildMappings = mergeChildMappings;
    exports.getInitialChildMapping = getInitialChildMapping;
    exports.getNextChildMapping = getNextChildMapping;
    var _react = require_react();
    function getChildMapping(children, mapFn) {
      var mapper = function mapper2(child) {
        return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;
      };
      var result = Object.create(null);
      if (children)
        _react.Children.map(children, function(c) {
          return c;
        }).forEach(function(child) {
          result[child.key] = mapper(child);
        });
      return result;
    }
    function mergeChildMappings(prev, next) {
      prev = prev || {};
      next = next || {};
      function getValueForKey(key) {
        return key in next ? next[key] : prev[key];
      }
      var nextKeysPending = Object.create(null);
      var pendingKeys = [];
      for (var prevKey in prev) {
        if (prevKey in next) {
          if (pendingKeys.length) {
            nextKeysPending[prevKey] = pendingKeys;
            pendingKeys = [];
          }
        } else {
          pendingKeys.push(prevKey);
        }
      }
      var i;
      var childMapping = {};
      for (var nextKey in next) {
        if (nextKeysPending[nextKey]) {
          for (i = 0; i < nextKeysPending[nextKey].length; i++) {
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
          }
        }
        childMapping[nextKey] = getValueForKey(nextKey);
      }
      for (i = 0; i < pendingKeys.length; i++) {
        childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
      }
      return childMapping;
    }
    function getProp(child, prop, props) {
      return props[prop] != null ? props[prop] : child.props[prop];
    }
    function getInitialChildMapping(props, onExited) {
      return getChildMapping(props.children, function(child) {
        return (0, _react.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          appear: getProp(child, "appear", props),
          enter: getProp(child, "enter", props),
          exit: getProp(child, "exit", props)
        });
      });
    }
    function getNextChildMapping(nextProps, prevChildMapping, onExited) {
      var nextChildMapping = getChildMapping(nextProps.children);
      var children = mergeChildMappings(prevChildMapping, nextChildMapping);
      Object.keys(children).forEach(function(key) {
        var child = children[key];
        if (!(0, _react.isValidElement)(child))
          return;
        var hasPrev = key in prevChildMapping;
        var hasNext = key in nextChildMapping;
        var prevChild = prevChildMapping[key];
        var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in;
        if (hasNext && (!hasPrev || isLeaving)) {
          children[key] = (0, _react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: true,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        } else if (!hasNext && hasPrev && !isLeaving) {
          children[key] = (0, _react.cloneElement)(child, {
            in: false
          });
        } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {
          children[key] = (0, _react.cloneElement)(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: getProp(child, "exit", nextProps),
            enter: getProp(child, "enter", nextProps)
          });
        }
      });
      return children;
    }
  }
});

// node_modules/react-grid-gallery/node_modules/react-transition-group/TransitionGroup.js
var require_TransitionGroup = __commonJS({
  "node_modules/react-grid-gallery/node_modules/react-transition-group/TransitionGroup.js"(exports, module) {
    init_define_process_env();
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactLifecyclesCompat = (init_react_lifecycles_compat_es(), react_lifecycles_compat_es_exports);
    var _ChildMapping = require_ChildMapping();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _extends2() {
      _extends2 = Object.assign || function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    var values = Object.values || function(obj) {
      return Object.keys(obj).map(function(k) {
        return obj[k];
      });
    };
    var defaultProps = {
      component: "div",
      childFactory: function childFactory(child) {
        return child;
      }
    };
    var TransitionGroup2 = function(_React$Component) {
      _inheritsLoose(TransitionGroup3, _React$Component);
      function TransitionGroup3(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this)));
        _this.state = {
          handleExited,
          firstRender: true
        };
        return _this;
      }
      var _proto = TransitionGroup3.prototype;
      _proto.getChildContext = function getChildContext() {
        return {
          transitionGroup: {
            isMounting: !this.appeared
          }
        };
      };
      _proto.componentDidMount = function componentDidMount() {
        this.appeared = true;
        this.mounted = true;
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
      };
      TransitionGroup3.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
          children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
          firstRender: false
        };
      };
      _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
        if (child.key in currentChildMapping)
          return;
        if (child.props.onExited) {
          child.props.onExited(node);
        }
        if (this.mounted) {
          this.setState(function(state) {
            var children = _extends2({}, state.children);
            delete children[child.key];
            return {
              children
            };
          });
        }
      };
      _proto.render = function render2() {
        var _this$props = this.props, Component2 = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
        var children = values(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component2 === null) {
          return children;
        }
        return _react.default.createElement(Component2, props, children);
      };
      return TransitionGroup3;
    }(_react.default.Component);
    TransitionGroup2.childContextTypes = {
      transitionGroup: _propTypes.default.object.isRequired
    };
    TransitionGroup2.propTypes = true ? {
      component: _propTypes.default.any,
      children: _propTypes.default.node,
      appear: _propTypes.default.bool,
      enter: _propTypes.default.bool,
      exit: _propTypes.default.bool,
      childFactory: _propTypes.default.func
    } : {};
    TransitionGroup2.defaultProps = defaultProps;
    var _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup2);
    exports.default = _default;
    module.exports = exports["default"];
  }
});

// node_modules/react-grid-gallery/node_modules/react-transition-group/ReplaceTransition.js
var require_ReplaceTransition = __commonJS({
  "node_modules/react-grid-gallery/node_modules/react-transition-group/ReplaceTransition.js"(exports, module) {
    init_define_process_env();
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _reactDom = require_react_dom();
    var _TransitionGroup = _interopRequireDefault(require_TransitionGroup());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var ReplaceTransition = function(_React$Component) {
      _inheritsLoose(ReplaceTransition2, _React$Component);
      function ReplaceTransition2() {
        var _this;
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
        _this.handleEnter = function() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _this.handleLifecycle("onEnter", 0, args);
        };
        _this.handleEntering = function() {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          return _this.handleLifecycle("onEntering", 0, args);
        };
        _this.handleEntered = function() {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
          return _this.handleLifecycle("onEntered", 0, args);
        };
        _this.handleExit = function() {
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }
          return _this.handleLifecycle("onExit", 1, args);
        };
        _this.handleExiting = function() {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }
          return _this.handleLifecycle("onExiting", 1, args);
        };
        _this.handleExited = function() {
          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
            args[_key7] = arguments[_key7];
          }
          return _this.handleLifecycle("onExited", 1, args);
        };
        return _this;
      }
      var _proto = ReplaceTransition2.prototype;
      _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
        var _child$props;
        var children = this.props.children;
        var child = _react.default.Children.toArray(children)[idx];
        if (child.props[handler])
          (_child$props = child.props)[handler].apply(_child$props, originalArgs);
        if (this.props[handler])
          this.props[handler]((0, _reactDom.findDOMNode)(this));
      };
      _proto.render = function render2() {
        var _this$props = this.props, children = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
        var _React$Children$toArr = _react.default.Children.toArray(children), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
        delete props.onEnter;
        delete props.onEntering;
        delete props.onEntered;
        delete props.onExit;
        delete props.onExiting;
        delete props.onExited;
        return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
          key: "first",
          onEnter: this.handleEnter,
          onEntering: this.handleEntering,
          onEntered: this.handleEntered
        }) : _react.default.cloneElement(second, {
          key: "second",
          onEnter: this.handleExit,
          onEntering: this.handleExiting,
          onEntered: this.handleExited
        }));
      };
      return ReplaceTransition2;
    }(_react.default.Component);
    ReplaceTransition.propTypes = true ? {
      in: _propTypes.default.bool.isRequired,
      children: function children(props, propName) {
        if (_react.default.Children.count(props[propName]) !== 2)
          return new Error('"' + propName + '" must be exactly two transition components.');
        return null;
      }
    } : {};
    var _default = ReplaceTransition;
    exports.default = _default;
    module.exports = exports["default"];
  }
});

// node_modules/react-grid-gallery/node_modules/react-transition-group/index.js
var require_react_transition_group = __commonJS({
  "node_modules/react-grid-gallery/node_modules/react-transition-group/index.js"(exports, module) {
    init_define_process_env();
    "use strict";
    var _CSSTransition = _interopRequireDefault(require_CSSTransition());
    var _ReplaceTransition = _interopRequireDefault(require_ReplaceTransition());
    var _TransitionGroup = _interopRequireDefault(require_TransitionGroup());
    var _Transition = _interopRequireDefault(require_Transition());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    module.exports = {
      Transition: _Transition.default,
      TransitionGroup: _TransitionGroup.default,
      ReplaceTransition: _ReplaceTransition.default,
      CSSTransition: _CSSTransition.default
    };
  }
});

// node_modules/react-grid-gallery/node_modules/react-images/dist/react-images.es.js
var react_images_es_exports = {};
__export(react_images_es_exports, {
  default: () => react_images_es_default
});
function deepMerge(target) {
  var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var extended = Object.assign({}, target);
  Object.keys(source).forEach(function(key) {
    if (_typeof(source[key]) !== "object" || !source[key]) {
      extended[key] = source[key];
    } else {
      if (!target[key]) {
        extended[key] = source[key];
      } else {
        extended[key] = deepMerge(target[key], source[key]);
      }
    }
  });
  return extended;
}
function Arrow(_ref, _ref2) {
  var theme$$1 = _ref2.theme;
  var direction = _ref.direction, icon = _ref.icon, onClick = _ref.onClick, size = _ref.size, props = objectWithoutProperties(_ref, ["direction", "icon", "onClick", "size"]);
  var classes2 = import_no_important.StyleSheet.create(deepMerge(defaultStyles$1, theme$$1));
  return import_react.default.createElement("button", _extends({
    type: "button",
    className: (0, import_no_important.css)(classes2.arrow, classes2["arrow__direction__" + direction], size && classes2["arrow__size__" + size]),
    onClick,
    onTouchEnd: onClick
  }, props), import_react.default.createElement(Icon, { fill: !!theme$$1.arrow && theme$$1.arrow.fill || theme.arrow.fill, type: icon }));
}
function Container(_ref, _ref2) {
  var theme$$1 = _ref2.theme;
  var props = objectWithoutProperties(_ref, []);
  var classes2 = import_no_important.StyleSheet.create(deepMerge(defaultStyles$2, theme$$1));
  return import_react.default.createElement("div", _extends({
    id: "lightboxBackdrop",
    className: (0, import_no_important.css)(classes2.container)
  }, props));
}
function Footer(_ref, _ref2) {
  var theme$$1 = _ref2.theme;
  var caption = _ref.caption, countCurrent = _ref.countCurrent, countSeparator = _ref.countSeparator, countTotal = _ref.countTotal, showCount = _ref.showCount, props = objectWithoutProperties(_ref, ["caption", "countCurrent", "countSeparator", "countTotal", "showCount"]);
  if (!caption && !showCount)
    return null;
  var classes2 = import_no_important.StyleSheet.create(deepMerge(defaultStyles$3, theme$$1));
  var imageCount = showCount ? import_react.default.createElement("div", { className: (0, import_no_important.css)(classes2.footerCount) }, countCurrent, countSeparator, countTotal) : import_react.default.createElement("span", null);
  return import_react.default.createElement("div", _extends({ className: (0, import_no_important.css)(classes2.footer) }, props), caption ? import_react.default.createElement("figcaption", { className: (0, import_no_important.css)(classes2.footerCaption) }, caption) : import_react.default.createElement("span", null), imageCount);
}
function Header(_ref, _ref2) {
  var theme$$1 = _ref2.theme;
  var customControls = _ref.customControls, onClose = _ref.onClose, showCloseButton = _ref.showCloseButton, closeButtonTitle = _ref.closeButtonTitle, props = objectWithoutProperties(_ref, ["customControls", "onClose", "showCloseButton", "closeButtonTitle"]);
  var classes2 = import_no_important.StyleSheet.create(deepMerge(defaultStyles$4, theme$$1));
  return import_react.default.createElement("div", _extends({ className: (0, import_no_important.css)(classes2.header) }, props), customControls ? customControls : import_react.default.createElement("span", null), !!showCloseButton && import_react.default.createElement("button", {
    title: closeButtonTitle,
    className: (0, import_no_important.css)(classes2.close),
    onClick: onClose
  }, import_react.default.createElement(Icon, { fill: !!theme$$1.close && theme$$1.close.fill || theme.close.fill, type: "close" })));
}
function Thumbnail(_ref, _ref2) {
  var index = _ref.index, src = _ref.src, thumbnail = _ref.thumbnail, active = _ref.active, _onClick = _ref.onClick;
  var theme$$1 = _ref2.theme;
  var url = thumbnail ? thumbnail : src;
  var classes2 = import_no_important.StyleSheet.create(deepMerge(defaultStyles$5, theme$$1));
  return import_react.default.createElement("div", {
    className: (0, import_no_important.css)(classes2.thumbnail, active && classes2.thumbnail__active),
    onClick: function onClick(e) {
      e.preventDefault();
      e.stopPropagation();
      _onClick(index);
    },
    style: { backgroundImage: 'url("' + url + '")' }
  });
}
function bindFunctions(functions) {
  var _this = this;
  functions.forEach(function(f) {
    return _this[f] = _this[f].bind(_this);
  });
}
function normalizeSourceSet(data) {
  var sourceSet = data.srcSet || data.srcset;
  if (Array.isArray(sourceSet)) {
    return sourceSet.join();
  }
  return sourceSet;
}
var import_prop_types, import_react, import_aphrodite, import_react_scrolllock, import_no_important, import_react_transition_group, import_react_dom, theme, _typeof, asyncGenerator, classCallCheck, createClass, _extends, inherits, objectWithoutProperties, possibleConstructorReturn, arrowLeft, arrowRight, close, icons, Icon, defaultStyles$1, defaultStyles$2, defaultStyles$3, defaultStyles$4, defaultStyles$5, classes, arrowStyles, PaginatedThumbnails, PassContext, Portal, Spinner, rippleKeyframes, styles, canUseDom, Lightbox, defaultStyles, react_images_es_default;
var init_react_images_es = __esm({
  "node_modules/react-grid-gallery/node_modules/react-images/dist/react-images.es.js"() {
    init_define_process_env();
    import_prop_types = __toModule(require_prop_types());
    import_react = __toModule(require_react());
    import_aphrodite = __toModule(require_lib());
    import_react_scrolllock = __toModule(require_dist2());
    import_no_important = __toModule(require_no_important2());
    import_react_transition_group = __toModule(require_react_transition_group());
    import_react_dom = __toModule(require_react_dom());
    theme = {};
    theme.container = {
      background: "rgba(0, 0, 0, 0.8)",
      gutter: {
        horizontal: 10,
        vertical: 10
      },
      zIndex: 2001
    };
    theme.header = {
      height: 40
    };
    theme.close = {
      fill: "white"
    };
    theme.footer = {
      color: "white",
      count: {
        color: "rgba(255, 255, 255, 0.75)",
        fontSize: "0.85em"
      },
      height: 40,
      gutter: {
        horizontal: 0,
        vertical: 5
      }
    };
    theme.thumbnail = {
      activeBorderColor: "white",
      size: 50,
      gutter: 2
    };
    theme.arrow = {
      background: "none",
      fill: "white",
      height: 120
    };
    _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    asyncGenerator = function() {
      function AwaitValue(value) {
        this.value = value;
      }
      function AsyncGenerator(gen) {
        var front, back;
        function send(key, arg) {
          return new Promise(function(resolve, reject) {
            var request = {
              key,
              arg,
              resolve,
              reject,
              next: null
            };
            if (back) {
              back = back.next = request;
            } else {
              front = back = request;
              resume(key, arg);
            }
          });
        }
        function resume(key, arg) {
          try {
            var result = gen[key](arg);
            var value = result.value;
            if (value instanceof AwaitValue) {
              Promise.resolve(value.value).then(function(arg2) {
                resume("next", arg2);
              }, function(arg2) {
                resume("throw", arg2);
              });
            } else {
              settle(result.done ? "return" : "normal", result.value);
            }
          } catch (err) {
            settle("throw", err);
          }
        }
        function settle(type, value) {
          switch (type) {
            case "return":
              front.resolve({
                value,
                done: true
              });
              break;
            case "throw":
              front.reject(value);
              break;
            default:
              front.resolve({
                value,
                done: false
              });
              break;
          }
          front = front.next;
          if (front) {
            resume(front.key, front.arg);
          } else {
            back = null;
          }
        }
        this._invoke = send;
        if (typeof gen.return !== "function") {
          this.return = void 0;
        }
      }
      if (typeof Symbol === "function" && Symbol.asyncIterator) {
        AsyncGenerator.prototype[Symbol.asyncIterator] = function() {
          return this;
        };
      }
      AsyncGenerator.prototype.next = function(arg) {
        return this._invoke("next", arg);
      };
      AsyncGenerator.prototype.throw = function(arg) {
        return this._invoke("throw", arg);
      };
      AsyncGenerator.prototype.return = function(arg) {
        return this._invoke("return", arg);
      };
      return {
        wrap: function(fn) {
          return function() {
            return new AsyncGenerator(fn.apply(this, arguments));
          };
        },
        await: function(value) {
          return new AwaitValue(value);
        }
      };
    }();
    classCallCheck = function(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    };
    createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    inherits = function(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    };
    objectWithoutProperties = function(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    };
    possibleConstructorReturn = function(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    };
    arrowLeft = function(fill) {
      return '<svg fill="' + fill + '" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 512 512" xml:space="preserve">\n		<path d="M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z"/>\n	</svg>';
    };
    arrowRight = function(fill) {
      return '<svg fill="' + fill + '" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 512 512" xml:space="preserve">\n		<path d="M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z"/>\n	</svg>';
    };
    close = function(fill) {
      return '<svg fill="' + fill + '" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve">\n		<path d="M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4 L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1 c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1 c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z"/>\n	</svg>';
    };
    icons = { arrowLeft, arrowRight, close };
    Icon = function Icon2(_ref) {
      var fill = _ref.fill, type = _ref.type, props = objectWithoutProperties(_ref, ["fill", "type"]);
      var icon = icons[type];
      return import_react.default.createElement("span", _extends({
        dangerouslySetInnerHTML: { __html: icon(fill) }
      }, props));
    };
    Icon.propTypes = {
      fill: import_prop_types.default.string,
      type: import_prop_types.default.oneOf(Object.keys(icons))
    };
    Icon.defaultProps = {
      fill: "white"
    };
    Arrow.propTypes = {
      direction: import_prop_types.default.oneOf(["left", "right"]),
      icon: import_prop_types.default.string,
      onClick: import_prop_types.default.func.isRequired,
      size: import_prop_types.default.oneOf(["medium", "small"]).isRequired
    };
    Arrow.defaultProps = {
      size: "medium"
    };
    Arrow.contextTypes = {
      theme: import_prop_types.default.object.isRequired
    };
    defaultStyles$1 = {
      arrow: {
        background: "none",
        border: "none",
        borderRadius: 4,
        cursor: "pointer",
        outline: "none",
        padding: 10,
        position: "absolute",
        top: "50%",
        WebkitTouchCallout: "none",
        userSelect: "none"
      },
      arrow__size__medium: {
        height: theme.arrow.height,
        marginTop: theme.arrow.height / -2,
        width: 40,
        "@media (min-width: 768px)": {
          width: 70
        }
      },
      arrow__size__small: {
        height: theme.thumbnail.size,
        marginTop: theme.thumbnail.size / -2,
        width: 30,
        "@media (min-width: 500px)": {
          width: 40
        }
      },
      arrow__direction__right: {
        right: theme.container.gutter.horizontal
      },
      arrow__direction__left: {
        left: theme.container.gutter.horizontal
      }
    };
    Container.contextTypes = {
      theme: import_prop_types.default.object.isRequired
    };
    defaultStyles$2 = {
      container: {
        alignItems: "center",
        backgroundColor: theme.container.background,
        boxSizing: "border-box",
        display: "flex",
        height: "100%",
        justifyContent: "center",
        left: 0,
        paddingBottom: theme.container.gutter.vertical,
        paddingLeft: theme.container.gutter.horizontal,
        paddingRight: theme.container.gutter.horizontal,
        paddingTop: theme.container.gutter.vertical,
        position: "fixed",
        top: 0,
        width: "100%",
        zIndex: theme.container.zIndex
      }
    };
    Footer.propTypes = {
      caption: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.element]),
      countCurrent: import_prop_types.default.number,
      countSeparator: import_prop_types.default.string,
      countTotal: import_prop_types.default.number,
      showCount: import_prop_types.default.bool
    };
    Footer.contextTypes = {
      theme: import_prop_types.default.object.isRequired
    };
    defaultStyles$3 = {
      footer: {
        boxSizing: "border-box",
        color: theme.footer.color,
        cursor: "auto",
        display: "flex",
        justifyContent: "space-between",
        left: 0,
        lineHeight: 1.3,
        paddingBottom: theme.footer.gutter.vertical,
        paddingLeft: theme.footer.gutter.horizontal,
        paddingRight: theme.footer.gutter.horizontal,
        paddingTop: theme.footer.gutter.vertical
      },
      footerCount: {
        color: theme.footer.count.color,
        fontSize: theme.footer.count.fontSize,
        paddingLeft: "1em"
      },
      footerCaption: {
        flex: "1 1 0"
      }
    };
    Header.propTypes = {
      customControls: import_prop_types.default.array,
      onClose: import_prop_types.default.func.isRequired,
      showCloseButton: import_prop_types.default.bool
    };
    Header.contextTypes = {
      theme: import_prop_types.default.object.isRequired
    };
    defaultStyles$4 = {
      header: {
        display: "flex",
        justifyContent: "space-between",
        height: theme.header.height
      },
      close: {
        background: "none",
        border: "none",
        cursor: "pointer",
        outline: "none",
        position: "relative",
        top: 0,
        verticalAlign: "bottom",
        zIndex: 1,
        height: 40,
        marginRight: -10,
        padding: 10,
        width: 40
      }
    };
    Thumbnail.propTypes = {
      active: import_prop_types.default.bool,
      index: import_prop_types.default.number,
      onClick: import_prop_types.default.func.isRequired,
      src: import_prop_types.default.string,
      thumbnail: import_prop_types.default.string
    };
    Thumbnail.contextTypes = {
      theme: import_prop_types.default.object.isRequired
    };
    defaultStyles$5 = {
      thumbnail: {
        backgroundPosition: "center",
        backgroundSize: "cover",
        borderRadius: 2,
        boxShadow: "inset 0 0 0 1px hsla(0,0%,100%,.2)",
        cursor: "pointer",
        display: "inline-block",
        height: theme.thumbnail.size,
        margin: theme.thumbnail.gutter,
        overflow: "hidden",
        width: theme.thumbnail.size
      },
      thumbnail__active: {
        boxShadow: "inset 0 0 0 2px " + theme.thumbnail.activeBorderColor
      }
    };
    classes = import_no_important.StyleSheet.create({
      paginatedThumbnails: {
        bottom: theme.container.gutter.vertical,
        height: theme.thumbnail.size,
        padding: "0 50px",
        position: "absolute",
        textAlign: "center",
        whiteSpace: "nowrap",
        left: "50%",
        transform: "translateX(-50%)"
      }
    });
    arrowStyles = {
      height: theme.thumbnail.size + theme.thumbnail.gutter * 2,
      width: 40
    };
    PaginatedThumbnails = function(_Component) {
      inherits(PaginatedThumbnails2, _Component);
      function PaginatedThumbnails2(props) {
        classCallCheck(this, PaginatedThumbnails2);
        var _this = possibleConstructorReturn(this, (PaginatedThumbnails2.__proto__ || Object.getPrototypeOf(PaginatedThumbnails2)).call(this, props));
        _this.state = {
          hasCustomPage: false
        };
        _this.gotoPrev = _this.gotoPrev.bind(_this);
        _this.gotoNext = _this.gotoNext.bind(_this);
        return _this;
      }
      createClass(PaginatedThumbnails2, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps2(nextProps) {
          if (nextProps.currentImage !== this.props.currentImage) {
            this.setState({
              hasCustomPage: false
            });
          }
        }
      }, {
        key: "getFirst",
        value: function getFirst() {
          var _props = this.props, currentImage = _props.currentImage, offset = _props.offset;
          if (this.state.hasCustomPage) {
            return this.clampFirst(this.state.first);
          }
          return this.clampFirst(currentImage - offset);
        }
      }, {
        key: "setFirst",
        value: function setFirst(event, newFirst) {
          var first = this.state.first;
          if (event) {
            event.preventDefault();
            event.stopPropagation();
          }
          if (first === newFirst)
            return;
          this.setState({
            hasCustomPage: true,
            first: newFirst
          });
        }
      }, {
        key: "gotoPrev",
        value: function gotoPrev(event) {
          this.setFirst(event, this.getFirst() - this.props.offset);
        }
      }, {
        key: "gotoNext",
        value: function gotoNext(event) {
          this.setFirst(event, this.getFirst() + this.props.offset);
        }
      }, {
        key: "clampFirst",
        value: function clampFirst(value) {
          var _props2 = this.props, images = _props2.images, offset = _props2.offset;
          var totalCount = 2 * offset + 1;
          if (value < 0) {
            return 0;
          } else if (value + totalCount > images.length) {
            return images.length - totalCount;
          } else {
            return value;
          }
        }
      }, {
        key: "renderArrowPrev",
        value: function renderArrowPrev() {
          if (this.getFirst() <= 0)
            return null;
          return import_react.default.createElement(Arrow, {
            direction: "left",
            size: "small",
            icon: "arrowLeft",
            onClick: this.gotoPrev,
            style: arrowStyles,
            title: "Previous (Left arrow key)",
            type: "button"
          });
        }
      }, {
        key: "renderArrowNext",
        value: function renderArrowNext() {
          var _props3 = this.props, offset = _props3.offset, images = _props3.images;
          var totalCount = 2 * offset + 1;
          if (this.getFirst() + totalCount >= images.length)
            return null;
          return import_react.default.createElement(Arrow, {
            direction: "right",
            size: "small",
            icon: "arrowRight",
            onClick: this.gotoNext,
            style: arrowStyles,
            title: "Next (Right arrow key)",
            type: "button"
          });
        }
      }, {
        key: "render",
        value: function render$$1() {
          var _props4 = this.props, images = _props4.images, currentImage = _props4.currentImage, onClickThumbnail = _props4.onClickThumbnail, offset = _props4.offset;
          var totalCount = 2 * offset + 1;
          var thumbnails = [];
          var baseOffset = 0;
          if (images.length <= totalCount) {
            thumbnails = images;
          } else {
            baseOffset = this.getFirst();
            thumbnails = images.slice(baseOffset, baseOffset + totalCount);
          }
          return import_react.default.createElement("div", { className: (0, import_no_important.css)(classes.paginatedThumbnails) }, this.renderArrowPrev(), thumbnails.map(function(img, idx) {
            return import_react.default.createElement(Thumbnail, _extends({
              key: baseOffset + idx
            }, img, {
              index: baseOffset + idx,
              onClick: onClickThumbnail,
              active: baseOffset + idx === currentImage
            }));
          }), this.renderArrowNext());
        }
      }]);
      return PaginatedThumbnails2;
    }(import_react.Component);
    PaginatedThumbnails.propTypes = {
      currentImage: import_prop_types.default.number,
      images: import_prop_types.default.array,
      offset: import_prop_types.default.number,
      onClickThumbnail: import_prop_types.default.func.isRequired
    };
    PassContext = function(_Component) {
      inherits(PassContext2, _Component);
      function PassContext2() {
        classCallCheck(this, PassContext2);
        return possibleConstructorReturn(this, (PassContext2.__proto__ || Object.getPrototypeOf(PassContext2)).apply(this, arguments));
      }
      createClass(PassContext2, [{
        key: "getChildContext",
        value: function getChildContext() {
          return this.props.context;
        }
      }, {
        key: "render",
        value: function render$$1() {
          return import_react.Children.only(this.props.children);
        }
      }]);
      return PassContext2;
    }(import_react.Component);
    PassContext.propTypes = {
      context: import_prop_types.default.object.isRequired
    };
    PassContext.childContextTypes = {
      theme: import_prop_types.default.object
    };
    Portal = function(_Component) {
      inherits(Portal2, _Component);
      function Portal2() {
        classCallCheck(this, Portal2);
        var _this = possibleConstructorReturn(this, (Portal2.__proto__ || Object.getPrototypeOf(Portal2)).call(this));
        _this.portalElement = null;
        return _this;
      }
      createClass(Portal2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var p = document.createElement("div");
          document.body.appendChild(p);
          this.portalElement = p;
          this.componentDidUpdate();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          var duration = 200;
          var styles3 = "\n				.fade-enter { opacity: 0.01; }\n				.fade-enter.fade-enter-active { opacity: 1; transition: opacity " + duration + "ms; }\n				.fade-leave { opacity: 1; }\n				.fade-leave.fade-leave-active { opacity: 0.01; transition: opacity " + duration + "ms; }\n		";
          (0, import_react_dom.render)(import_react.default.createElement(PassContext, { context: this.context }, import_react.default.createElement("div", null, import_react.default.createElement("style", null, styles3), import_react.default.createElement(import_react_transition_group.TransitionGroup, this.props, import_react.default.createElement(import_react_transition_group.CSSTransition, { timeout: { enter: duration, exit: duration }, classNames: "fade" }, this.props.children)))), this.portalElement);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          (0, import_react_dom.unmountComponentAtNode)(this.portalElement);
          document.body.removeChild(this.portalElement);
        }
      }, {
        key: "render",
        value: function render$$1() {
          return null;
        }
      }]);
      return Portal2;
    }(import_react.Component);
    Portal.contextTypes = {
      theme: import_prop_types.default.object.isRequired
    };
    Spinner = function Spinner2(props) {
      var classes2 = import_no_important.StyleSheet.create(styles(props));
      return import_react.default.createElement("div", { className: (0, import_no_important.css)(classes2.spinner) }, import_react.default.createElement("div", { className: (0, import_no_important.css)(classes2.ripple) }));
    };
    Spinner.propTypes = {
      color: import_prop_types.default.string,
      size: import_prop_types.default.number
    };
    rippleKeyframes = {
      "0%": {
        top: "50%",
        left: "50%",
        width: 0,
        height: 0,
        opacity: 1
      },
      "100%": {
        top: 0,
        left: 0,
        width: "100%",
        height: "100%",
        opacity: 0
      }
    };
    styles = function styles2(_ref) {
      var color = _ref.color, size = _ref.size;
      return {
        spinner: {
          display: "inline-block",
          position: "relative",
          width: size,
          height: size
        },
        ripple: {
          position: "absolute",
          border: "4px solid " + color,
          opacity: 1,
          borderRadius: "50%",
          animationName: rippleKeyframes,
          animationDuration: "1s",
          animationTimingFunction: "cubic-bezier(0, 0.2, 0.8, 1)",
          animationIterationCount: "infinite"
        }
      };
    };
    canUseDom = !!(typeof window !== "undefined" && window.document && window.document.createElement);
    Lightbox = function(_Component) {
      inherits(Lightbox2, _Component);
      function Lightbox2(props) {
        classCallCheck(this, Lightbox2);
        var _this = possibleConstructorReturn(this, (Lightbox2.__proto__ || Object.getPrototypeOf(Lightbox2)).call(this, props));
        _this.theme = deepMerge(theme, props.theme);
        _this.classes = import_aphrodite.StyleSheet.create(deepMerge(defaultStyles, _this.theme));
        _this.state = { imageLoaded: false };
        bindFunctions.call(_this, ["gotoNext", "gotoPrev", "closeBackdrop", "handleKeyboardInput", "handleImageLoaded"]);
        return _this;
      }
      createClass(Lightbox2, [{
        key: "getChildContext",
        value: function getChildContext() {
          return {
            theme: this.theme
          };
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          if (this.props.isOpen) {
            if (this.props.enableKeyboardInput) {
              window.addEventListener("keydown", this.handleKeyboardInput);
            }
            if (typeof this.props.currentImage === "number") {
              this.preloadImage(this.props.currentImage, this.handleImageLoaded);
            }
          }
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps2(nextProps) {
          if (!canUseDom)
            return;
          if (nextProps.preloadNextImage) {
            var currentIndex = this.props.currentImage;
            var nextIndex = nextProps.currentImage + 1;
            var prevIndex = nextProps.currentImage - 1;
            var preloadIndex = void 0;
            if (currentIndex && nextProps.currentImage > currentIndex) {
              preloadIndex = nextIndex;
            } else if (currentIndex && nextProps.currentImage < currentIndex) {
              preloadIndex = prevIndex;
            }
            if (preloadIndex) {
              this.preloadImage(preloadIndex);
            } else {
              this.preloadImage(prevIndex);
              this.preloadImage(nextIndex);
            }
          }
          if (this.props.currentImage !== nextProps.currentImage || !this.props.isOpen && nextProps.isOpen) {
            var img = this.preloadImageData(nextProps.images[nextProps.currentImage], this.handleImageLoaded);
            if (img)
              this.setState({ imageLoaded: img.complete });
          }
          if (!this.props.isOpen && nextProps.isOpen && nextProps.enableKeyboardInput) {
            window.addEventListener("keydown", this.handleKeyboardInput);
          }
          if (!nextProps.isOpen && nextProps.enableKeyboardInput) {
            window.removeEventListener("keydown", this.handleKeyboardInput);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.props.enableKeyboardInput) {
            window.removeEventListener("keydown", this.handleKeyboardInput);
          }
        }
      }, {
        key: "preloadImage",
        value: function preloadImage(idx, onload) {
          return this.preloadImageData(this.props.images[idx], onload);
        }
      }, {
        key: "preloadImageData",
        value: function preloadImageData(data, onload) {
          if (!data)
            return;
          var img = new Image();
          var sourceSet = normalizeSourceSet(data);
          img.onerror = onload;
          img.onload = onload;
          img.src = data.src;
          if (sourceSet)
            img.srcset = sourceSet;
          return img;
        }
      }, {
        key: "gotoNext",
        value: function gotoNext(event) {
          var _props = this.props, currentImage = _props.currentImage, images = _props.images;
          var imageLoaded = this.state.imageLoaded;
          if (!imageLoaded || currentImage === images.length - 1)
            return;
          if (event) {
            event.preventDefault();
            event.stopPropagation();
          }
          this.props.onClickNext();
        }
      }, {
        key: "gotoPrev",
        value: function gotoPrev(event) {
          var currentImage = this.props.currentImage;
          var imageLoaded = this.state.imageLoaded;
          if (!imageLoaded || currentImage === 0)
            return;
          if (event) {
            event.preventDefault();
            event.stopPropagation();
          }
          this.props.onClickPrev();
        }
      }, {
        key: "closeBackdrop",
        value: function closeBackdrop(event) {
          if (event.target.id === "lightboxBackdrop" || event.target.tagName === "FIGURE") {
            this.props.onClose();
          }
        }
      }, {
        key: "handleKeyboardInput",
        value: function handleKeyboardInput(event) {
          if (event.keyCode === 37) {
            this.gotoPrev(event);
            return true;
          } else if (event.keyCode === 39) {
            this.gotoNext(event);
            return true;
          } else if (event.keyCode === 27) {
            this.props.onClose();
            return true;
          }
          return false;
        }
      }, {
        key: "handleImageLoaded",
        value: function handleImageLoaded() {
          this.setState({ imageLoaded: true });
        }
      }, {
        key: "renderArrowPrev",
        value: function renderArrowPrev() {
          if (this.props.currentImage === 0)
            return null;
          return import_react.default.createElement(Arrow, {
            direction: "left",
            icon: "arrowLeft",
            onClick: this.gotoPrev,
            title: this.props.leftArrowTitle,
            type: "button"
          });
        }
      }, {
        key: "renderArrowNext",
        value: function renderArrowNext() {
          if (this.props.currentImage === this.props.images.length - 1)
            return null;
          return import_react.default.createElement(Arrow, {
            direction: "right",
            icon: "arrowRight",
            onClick: this.gotoNext,
            title: this.props.rightArrowTitle,
            type: "button"
          });
        }
      }, {
        key: "renderDialog",
        value: function renderDialog() {
          var _props2 = this.props, backdropClosesModal = _props2.backdropClosesModal, isOpen = _props2.isOpen, showThumbnails = _props2.showThumbnails, width = _props2.width;
          var imageLoaded = this.state.imageLoaded;
          if (!isOpen)
            return import_react.default.createElement("span", { key: "closed" });
          var offsetThumbnails = 0;
          if (showThumbnails) {
            offsetThumbnails = this.theme.thumbnail.size + this.theme.container.gutter.vertical;
          }
          return import_react.default.createElement(Container, {
            key: "open",
            onClick: backdropClosesModal && this.closeBackdrop,
            onTouchEnd: backdropClosesModal && this.closeBackdrop
          }, import_react.default.createElement("div", null, import_react.default.createElement("div", { className: (0, import_aphrodite.css)(this.classes.content), style: { marginBottom: offsetThumbnails, maxWidth: width } }, imageLoaded && this.renderHeader(), this.renderImages(), this.renderSpinner(), imageLoaded && this.renderFooter()), imageLoaded && this.renderThumbnails(), imageLoaded && this.renderArrowPrev(), imageLoaded && this.renderArrowNext(), this.props.preventScroll && import_react.default.createElement(import_react_scrolllock.default, null)));
        }
      }, {
        key: "renderImages",
        value: function renderImages() {
          var _props3 = this.props, currentImage = _props3.currentImage, images = _props3.images, onClickImage = _props3.onClickImage, showThumbnails = _props3.showThumbnails;
          var imageLoaded = this.state.imageLoaded;
          if (!images || !images.length)
            return null;
          var image = images[currentImage];
          var sourceSet = normalizeSourceSet(image);
          var sizes = sourceSet ? "100vw" : null;
          var thumbnailsSize = showThumbnails ? this.theme.thumbnail.size : 0;
          var heightOffset = this.theme.header.height + this.theme.footer.height + thumbnailsSize + this.theme.container.gutter.vertical + "px";
          return import_react.default.createElement("figure", { className: (0, import_aphrodite.css)(this.classes.figure) }, import_react.default.createElement("img", {
            className: (0, import_aphrodite.css)(this.classes.image, imageLoaded && this.classes.imageLoaded),
            onClick: onClickImage,
            sizes,
            alt: image.alt,
            src: image.src,
            srcSet: sourceSet,
            style: {
              cursor: onClickImage ? "pointer" : "auto",
              maxHeight: "calc(100vh - " + heightOffset + ")"
            }
          }));
        }
      }, {
        key: "renderThumbnails",
        value: function renderThumbnails() {
          var _props4 = this.props, images = _props4.images, currentImage = _props4.currentImage, onClickThumbnail = _props4.onClickThumbnail, showThumbnails = _props4.showThumbnails, thumbnailOffset = _props4.thumbnailOffset;
          if (!showThumbnails)
            return;
          return import_react.default.createElement(PaginatedThumbnails, {
            currentImage,
            images,
            offset: thumbnailOffset,
            onClickThumbnail
          });
        }
      }, {
        key: "renderHeader",
        value: function renderHeader() {
          var _props5 = this.props, closeButtonTitle = _props5.closeButtonTitle, customControls = _props5.customControls, onClose = _props5.onClose, showCloseButton = _props5.showCloseButton;
          return import_react.default.createElement(Header, {
            customControls,
            onClose,
            showCloseButton,
            closeButtonTitle
          });
        }
      }, {
        key: "renderFooter",
        value: function renderFooter() {
          var _props6 = this.props, currentImage = _props6.currentImage, images = _props6.images, imageCountSeparator = _props6.imageCountSeparator, showImageCount = _props6.showImageCount;
          if (!images || !images.length)
            return null;
          return import_react.default.createElement(Footer, {
            caption: images[currentImage].caption,
            countCurrent: currentImage + 1,
            countSeparator: imageCountSeparator,
            countTotal: images.length,
            showCount: showImageCount
          });
        }
      }, {
        key: "renderSpinner",
        value: function renderSpinner() {
          var _props7 = this.props, spinner = _props7.spinner, spinnerColor = _props7.spinnerColor, spinnerSize = _props7.spinnerSize;
          var imageLoaded = this.state.imageLoaded;
          var Spinner$$1 = spinner;
          return import_react.default.createElement("div", { className: (0, import_aphrodite.css)(this.classes.spinner, !imageLoaded && this.classes.spinnerActive) }, import_react.default.createElement(Spinner$$1, {
            color: spinnerColor,
            size: spinnerSize
          }));
        }
      }, {
        key: "render",
        value: function render$$1() {
          return import_react.default.createElement(Portal, null, this.renderDialog());
        }
      }]);
      return Lightbox2;
    }(import_react.Component);
    Lightbox.propTypes = {
      backdropClosesModal: import_prop_types.default.bool,
      closeButtonTitle: import_prop_types.default.string,
      currentImage: import_prop_types.default.number,
      customControls: import_prop_types.default.arrayOf(import_prop_types.default.node),
      enableKeyboardInput: import_prop_types.default.bool,
      imageCountSeparator: import_prop_types.default.string,
      images: import_prop_types.default.arrayOf(import_prop_types.default.shape({
        src: import_prop_types.default.string.isRequired,
        srcSet: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]),
        caption: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.element]),
        thumbnail: import_prop_types.default.string
      })).isRequired,
      isOpen: import_prop_types.default.bool,
      leftArrowTitle: import_prop_types.default.string,
      onClickImage: import_prop_types.default.func,
      onClickNext: import_prop_types.default.func,
      onClickPrev: import_prop_types.default.func,
      onClose: import_prop_types.default.func.isRequired,
      preloadNextImage: import_prop_types.default.bool,
      preventScroll: import_prop_types.default.bool,
      rightArrowTitle: import_prop_types.default.string,
      showCloseButton: import_prop_types.default.bool,
      showImageCount: import_prop_types.default.bool,
      showThumbnails: import_prop_types.default.bool,
      spinner: import_prop_types.default.func,
      spinnerColor: import_prop_types.default.string,
      spinnerSize: import_prop_types.default.number,
      theme: import_prop_types.default.object,
      thumbnailOffset: import_prop_types.default.number,
      width: import_prop_types.default.number
    };
    Lightbox.defaultProps = {
      closeButtonTitle: "Close (Esc)",
      currentImage: 0,
      enableKeyboardInput: true,
      imageCountSeparator: " of ",
      leftArrowTitle: "Previous (Left arrow key)",
      onClickShowNextImage: true,
      preloadNextImage: true,
      preventScroll: true,
      rightArrowTitle: "Next (Right arrow key)",
      showCloseButton: true,
      showImageCount: true,
      spinner: Spinner,
      spinnerColor: "white",
      spinnerSize: 100,
      theme: {},
      thumbnailOffset: 2,
      width: 1024
    };
    Lightbox.childContextTypes = {
      theme: import_prop_types.default.object.isRequired
    };
    defaultStyles = {
      content: {
        position: "relative"
      },
      figure: {
        margin: 0
      },
      image: {
        display: "block",
        height: "auto",
        margin: "0 auto",
        maxWidth: "100%",
        WebkitTouchCallout: "none",
        userSelect: "none",
        opacity: 0,
        transition: "opacity 0.3s"
      },
      imageLoaded: {
        opacity: 1
      },
      spinner: {
        position: "absolute",
        top: "50%",
        left: "50%",
        transform: "translate(-50%, -50%)",
        opacity: 0,
        transition: "opacity 0.3s",
        pointerEvents: "none"
      },
      spinnerActive: {
        opacity: 1
      }
    };
    react_images_es_default = Lightbox;
  }
});

// node_modules/react-grid-gallery/lib/CheckButton.js
var require_CheckButton = __commonJS({
  "node_modules/react-grid-gallery/lib/CheckButton.js"(exports, module) {
    init_define_process_env();
    "use strict";
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var CheckButton = function(_Component) {
      _inherits(CheckButton2, _Component);
      function CheckButton2(props) {
        _classCallCheck(this, CheckButton2);
        var _this = _possibleConstructorReturn(this, (CheckButton2.__proto__ || Object.getPrototypeOf(CheckButton2)).call(this, props));
        _this.state = {
          hover: _this.props.hover
        };
        _this.fill = _this.fill.bind(_this);
        _this.visibility = _this.visibility.bind(_this);
        return _this;
      }
      _createClass(CheckButton2, [{
        key: "fill",
        value: function fill() {
          if (this.props.isSelected)
            return this.props.selectedColor;
          else if (this.state.hover)
            return this.props.hoverColor;
          return this.props.color;
        }
      }, {
        key: "visibility",
        value: function visibility() {
          if (this.props.isSelected || this.props.isSelectable && this.props.parentHover)
            return "visible";
          return "hidden";
        }
      }, {
        key: "render",
        value: function render2() {
          var _this2 = this;
          var circleStyle = {
            display: this.props.isSelected ? "block" : "none"
          };
          return _react2.default.createElement("div", {
            title: "Select",
            style: {
              visibility: this.visibility(),
              background: "none",
              float: "left",
              width: "36px",
              height: "36px",
              border: "none",
              padding: "6px",
              cursor: "pointer",
              pointerEvents: "visible"
            },
            onClick: this.props.onClick ? function(e) {
              return _this2.props.onClick(_this2.props.index, e);
            } : null,
            onMouseOver: function onMouseOver(e) {
              return _this2.setState({ hover: true });
            },
            onMouseOut: function onMouseOut(e) {
              return _this2.setState({ hover: false });
            }
          }, _react2.default.createElement("svg", {
            fill: this.fill(),
            height: "24",
            viewBox: "0 0 24 24",
            width: "24",
            xmlns: "http://www.w3.org/2000/svg"
          }, _react2.default.createElement("radialGradient", {
            id: "shadow",
            cx: "38",
            cy: "95.488",
            r: "10.488",
            gradientTransform: "matrix(1 0 0 -1 -26 109)",
            gradientUnits: "userSpaceOnUse"
          }, _react2.default.createElement("stop", {
            offset: ".832",
            stopColor: "#010101"
          }), _react2.default.createElement("stop", {
            offset: "1",
            stopColor: "#010101",
            stopOpacity: "0"
          })), _react2.default.createElement("circle", {
            style: circleStyle,
            opacity: ".26",
            fill: "url(#shadow)",
            cx: "12",
            cy: "13.512",
            r: "10.488"
          }), _react2.default.createElement("circle", {
            style: circleStyle,
            fill: "#FFF",
            cx: "12",
            cy: "12.2",
            r: "8.292"
          }), _react2.default.createElement("path", { d: "M0 0h24v24H0z", fill: "none" }), _react2.default.createElement("path", { d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" })));
        }
      }]);
      return CheckButton2;
    }(_react.Component);
    CheckButton.propTypes = {
      index: _propTypes2.default.number,
      color: _propTypes2.default.string,
      isSelectable: _propTypes2.default.bool,
      isSelected: _propTypes2.default.bool,
      selectedColor: _propTypes2.default.string,
      parentHover: _propTypes2.default.bool,
      hover: _propTypes2.default.bool,
      hoverColor: _propTypes2.default.string,
      onClick: _propTypes2.default.func
    };
    CheckButton.defaultProps = {
      isSelectable: true,
      isSelected: false,
      parentHover: false,
      hover: false
    };
    module.exports = CheckButton;
  }
});

// node_modules/react-grid-gallery/lib/Image.js
var require_Image = __commonJS({
  "node_modules/react-grid-gallery/lib/Image.js"(exports) {
    init_define_process_env();
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _CheckButton = require_CheckButton();
    var _CheckButton2 = _interopRequireDefault(_CheckButton);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Image2 = function(_Component) {
      _inherits(Image3, _Component);
      function Image3(props) {
        _classCallCheck(this, Image3);
        var _this = _possibleConstructorReturn(this, (Image3.__proto__ || Object.getPrototypeOf(Image3)).call(this, props));
        _this.state = {
          hover: false
        };
        return _this;
      }
      _createClass(Image3, [{
        key: "tagStyle",
        value: function tagStyle() {
          if (this.props.tagStyle)
            return this.props.tagStyle;
          return {
            display: "inline",
            padding: ".2em .6em .3em",
            fontSize: "75%",
            fontWeight: "600",
            lineHeight: "1",
            color: "yellow",
            background: "rgba(0,0,0,0.65)",
            textAlign: "center",
            whiteSpace: "nowrap",
            verticalAlign: "baseline",
            borderRadius: ".25em"
          };
        }
      }, {
        key: "tileViewportStyle",
        value: function tileViewportStyle() {
          if (this.props.tileViewportStyle)
            return this.props.tileViewportStyle.call(this);
          var nanoBase64Backgorund = {};
          if (this.props.item.nano) {
            nanoBase64Backgorund = {
              background: "url(" + this.props.item.nano + ")",
              backgroundSize: "cover",
              backgroundPosition: "center center"
            };
          }
          if (this.props.item.isSelected)
            return Object.assign({
              width: this.props.item.vwidth - 32,
              height: this.props.height - 32,
              margin: 16,
              overflow: "hidden"
            }, nanoBase64Backgorund);
          return Object.assign({
            width: this.props.item.vwidth,
            height: this.props.height,
            overflow: "hidden"
          }, nanoBase64Backgorund);
        }
      }, {
        key: "thumbnailStyle",
        value: function thumbnailStyle() {
          if (this.props.thumbnailStyle)
            return this.props.thumbnailStyle.call(this);
          var rotationTransformValue = void 0;
          switch (this.props.item.orientation) {
            case 3:
              rotationTransformValue = "rotate(180deg)";
              break;
            case 6:
              rotationTransformValue = "rotate(90deg)";
              break;
            case 8:
              rotationTransformValue = "rotate(270deg)";
              break;
            case 2:
              rotationTransformValue = "rotateY(180deg)";
              break;
            case 4:
              rotationTransformValue = "rotate(180deg) rotateY(180deg)";
              break;
            case 5:
              rotationTransformValue = "rotate(270deg) rotateY(180deg)";
              break;
            case 7:
              rotationTransformValue = "rotate(90deg) rotateY(180deg)";
              break;
          }
          if (this.props.item.isSelected) {
            var ratio = this.props.item.scaletwidth / this.props.height;
            var height = 0;
            var width = 0;
            var viewportHeight = this.props.height - 32;
            var viewportWidth = this.props.item.vwidth - 32;
            if (this.props.item.scaletwidth > this.props.height) {
              width = this.props.item.scaletwidth - 32;
              height = Math.floor(width / ratio);
            } else {
              height = this.props.height - 32;
              width = Math.floor(height * ratio);
            }
            var marginTop = -Math.abs(Math.floor((viewportHeight - height) / 2));
            var marginLeft = -Math.abs(Math.floor((viewportWidth - width) / 2));
            return {
              cursor: "pointer",
              width,
              height,
              marginLeft,
              marginTop,
              transform: rotationTransformValue
            };
          }
          return {
            cursor: "pointer",
            width: this.props.item.scaletwidth,
            height: this.props.height,
            marginLeft: this.props.item.marginLeft,
            marginTop: 0,
            transform: rotationTransformValue
          };
        }
      }, {
        key: "renderCheckButton",
        value: function renderCheckButton() {
          return _react2.default.createElement(_CheckButton2.default, {
            key: "Select",
            index: this.props.index,
            color: "rgba(255, 255, 255, 0.7)",
            selectedColor: "#4285f4",
            hoverColor: "rgba(255, 255, 255, 1)",
            isSelected: this.props.item.isSelected,
            isSelectable: this.props.isSelectable,
            onClick: this.props.isSelectable ? this.props.onSelectImage : null,
            parentHover: this.state.hover
          });
        }
      }, {
        key: "render",
        value: function render2() {
          var _this2 = this;
          var alt = this.props.item.alt ? this.props.item.alt : "";
          var tags = typeof this.props.item.tags === "undefined" ? _react2.default.createElement("noscript", null) : this.props.item.tags.map(function(tag) {
            return _react2.default.createElement("div", {
              title: tag.title,
              key: "tag-" + tag.value,
              style: {
                display: "inline-block",
                cursor: "pointer",
                pointerEvents: "visible",
                margin: "2px"
              }
            }, _react2.default.createElement("span", { style: _this2.tagStyle() }, tag.value));
          });
          var customOverlay = typeof this.props.item.customOverlay === "undefined" ? _react2.default.createElement("noscript", null) : _react2.default.createElement("div", {
            className: "ReactGridGallery_custom-overlay",
            key: "custom-overlay-" + this.props.index,
            style: {
              pointerEvents: "none",
              opacity: this.state.hover ? 1 : 0,
              position: "absolute",
              height: "100%",
              width: "100%"
            }
          }, this.props.item.customOverlay);
          var thumbnailProps = {
            key: "img-" + this.props.index,
            src: this.props.item.thumbnail,
            alt,
            title: this.props.item.caption,
            style: this.thumbnailStyle()
          };
          var ThumbnailImageComponent = this.props.thumbnailImageComponent;
          return _react2.default.createElement("div", {
            className: "ReactGridGallery_tile",
            key: "tile-" + this.props.index,
            onMouseEnter: function onMouseEnter(e) {
              return _this2.setState({ hover: true });
            },
            onMouseLeave: function onMouseLeave(e) {
              return _this2.setState({ hover: false });
            },
            style: {
              margin: this.props.margin,
              WebkitUserSelect: "none",
              position: "relative",
              float: "left",
              background: "#eee",
              padding: "0px"
            }
          }, _react2.default.createElement("div", {
            className: "ReactGridGallery_tile-icon-bar",
            key: "tile-icon-bar-" + this.props.index,
            style: {
              pointerEvents: "none",
              opacity: 1,
              position: "absolute",
              height: "36px",
              width: "100%"
            }
          }, this.renderCheckButton()), _react2.default.createElement("div", {
            className: "ReactGridGallery_tile-bottom-bar",
            key: "tile-bottom-bar-" + this.props.index,
            style: {
              padding: "2px",
              pointerEvents: "none",
              position: "absolute",
              minHeight: "0px",
              maxHeight: "160px",
              width: "100%",
              bottom: "0px",
              overflow: "hidden"
            }
          }, tags), customOverlay, _react2.default.createElement("div", {
            className: "ReactGridGallery_tile-overlay",
            key: "tile-overlay-" + this.props.index,
            style: {
              pointerEvents: "none",
              opacity: 1,
              position: "absolute",
              height: "100%",
              width: "100%",
              background: this.state.hover && !this.props.item.isSelected && this.props.isSelectable ? "linear-gradient(to bottom,rgba(0,0,0,0.26),transparent 56px,transparent)" : "none"
            }
          }), _react2.default.createElement("div", {
            className: "ReactGridGallery_tile-viewport",
            style: this.tileViewportStyle(),
            key: "tile-viewport-" + this.props.index,
            onClick: this.props.onClick ? function(e) {
              return _this2.props.onClick.call(_this2, _this2.props.index, e);
            } : null
          }, ThumbnailImageComponent ? _react2.default.createElement(ThumbnailImageComponent, _extends2({}, this.props, { imageProps: thumbnailProps })) : _react2.default.createElement("img", thumbnailProps)), this.props.item.thumbnailCaption && _react2.default.createElement("div", {
            className: "ReactGridGallery_tile-description",
            style: {
              background: "white",
              height: "100%",
              width: "100%",
              margin: 0,
              userSelect: "text",
              WebkitUserSelect: "text",
              MozUserSelect: "text",
              overflow: "hidden"
            }
          }, this.props.item.thumbnailCaption));
        }
      }]);
      return Image3;
    }(_react.Component);
    Image2.propTypes = {
      item: _propTypes2.default.object,
      index: _propTypes2.default.number,
      margin: _propTypes2.default.number,
      height: _propTypes2.default.number,
      isSelectable: _propTypes2.default.bool,
      onClick: _propTypes2.default.func,
      onSelectImage: _propTypes2.default.func,
      tileViewportStyle: _propTypes2.default.func,
      thumbnailStyle: _propTypes2.default.func,
      tagStyle: _propTypes2.default.object,
      customOverlay: _propTypes2.default.element,
      thumbnailImageComponent: _propTypes2.default.func
    };
    Image2.defaultProps = {
      isSelectable: true,
      hover: false
    };
    exports.default = Image2;
  }
});

// node_modules/react-grid-gallery/lib/Gallery.js
var require_Gallery = __commonJS({
  "node_modules/react-grid-gallery/lib/Gallery.js"(exports, module) {
    init_define_process_env();
    "use strict";
    var _extends2 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactImages = (init_react_images_es(), react_images_es_exports);
    var _reactImages2 = _interopRequireDefault(_reactImages);
    var _Image = require_Image();
    var _Image2 = _interopRequireDefault(_Image);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Gallery = function(_Component) {
      _inherits(Gallery2, _Component);
      function Gallery2(props) {
        _classCallCheck(this, Gallery2);
        var _this = _possibleConstructorReturn(this, (Gallery2.__proto__ || Object.getPrototypeOf(Gallery2)).call(this, props));
        _this.state = {
          images: _this.props.images,
          thumbnails: [],
          lightboxIsOpen: _this.props.isOpen,
          currentImage: _this.props.currentImage,
          containerWidth: 0
        };
        _this.onResize = _this.onResize.bind(_this);
        _this.closeLightbox = _this.closeLightbox.bind(_this);
        _this.gotoImage = _this.gotoImage.bind(_this);
        _this.gotoNext = _this.gotoNext.bind(_this);
        _this.gotoPrevious = _this.gotoPrevious.bind(_this);
        _this.onClickImage = _this.onClickImage.bind(_this);
        _this.openLightbox = _this.openLightbox.bind(_this);
        _this.onSelectImage = _this.onSelectImage.bind(_this);
        return _this;
      }
      _createClass(Gallery2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.onResize();
        }
      }, {
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps2(np) {
          if (this.state.currentImage > np.images.length - 1) {
            this.setState({ currentImage: np.images.length - 1 });
          }
          if (this.state.images != np.images || this.props.maxRows != np.maxRows) {
            this.setState({
              images: np.images,
              thumbnails: this.renderThumbs(this._gallery.clientWidth, np.images)
            });
          }
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate() {
          if (!this._gallery)
            return;
          if (this._gallery.clientWidth !== this.state.containerWidth) {
            this.onResize();
          }
        }
      }, {
        key: "onResize",
        value: function onResize() {
          if (!this._gallery)
            return;
          this.setState({
            containerWidth: Math.floor(this._gallery.clientWidth),
            thumbnails: this.renderThumbs(this._gallery.clientWidth)
          });
        }
      }, {
        key: "openLightbox",
        value: function openLightbox(index, event) {
          if (event) {
            event.preventDefault();
          }
          if (this.props.lightboxWillOpen) {
            this.props.lightboxWillOpen.call(this, index);
          }
          if (this.props.currentImageWillChange) {
            this.props.currentImageWillChange.call(this, index);
          }
          this.setState({
            currentImage: index,
            lightboxIsOpen: true
          });
        }
      }, {
        key: "closeLightbox",
        value: function closeLightbox() {
          if (this.props.lightboxWillClose) {
            this.props.lightboxWillClose.call(this);
          }
          if (this.props.currentImageWillChange) {
            this.props.currentImageWillChange.call(this, 0);
          }
          this.setState({
            currentImage: 0,
            lightboxIsOpen: false
          });
        }
      }, {
        key: "gotoPrevious",
        value: function gotoPrevious() {
          if (this.props.currentImageWillChange) {
            this.props.currentImageWillChange.call(this, this.state.currentImage - 1);
          }
          this.setState({
            currentImage: this.state.currentImage - 1
          });
        }
      }, {
        key: "gotoNext",
        value: function gotoNext() {
          if (this.props.currentImageWillChange) {
            this.props.currentImageWillChange.call(this, this.state.currentImage + 1);
          }
          this.setState({
            currentImage: this.state.currentImage + 1
          });
        }
      }, {
        key: "onClickImage",
        value: function onClickImage() {
          if (this.state.currentImage === this.props.images.length - 1)
            return;
          this.gotoNext();
        }
      }, {
        key: "onSelectImage",
        value: function onSelectImage(index, event) {
          event.preventDefault();
          if (this.props.onSelectImage)
            this.props.onSelectImage.call(this, index, this.state.images[index]);
        }
      }, {
        key: "gotoImage",
        value: function gotoImage(index) {
          if (this.props.currentImageWillChange) {
            this.props.currentImageWillChange.call(this, index);
          }
          this.setState({
            currentImage: index
          });
        }
      }, {
        key: "getOnClickThumbnailFn",
        value: function getOnClickThumbnailFn() {
          if (!this.props.onClickThumbnail && this.props.enableLightbox)
            return this.openLightbox;
          if (this.props.onClickThumbnail)
            return this.props.onClickThumbnail;
          return null;
        }
      }, {
        key: "getOnClickLightboxThumbnailFn",
        value: function getOnClickLightboxThumbnailFn() {
          if (!this.props.onClickLightboxThumbnail && this.props.showLightboxThumbnails)
            return this.gotoImage;
          if (this.props.onClickLightboxThumbnail && this.props.showLightboxThumbnails)
            return this.props.onClickLightboxThumbnail;
          return null;
        }
      }, {
        key: "getOnClickImageFn",
        value: function getOnClickImageFn() {
          if (this.props.onClickImage)
            return this.props.onClickImage;
          return this.onClickImage;
        }
      }, {
        key: "getOnClickPrevFn",
        value: function getOnClickPrevFn() {
          if (this.props.onClickPrev)
            return this.props.onClickPrev;
          return this.gotoPrevious;
        }
      }, {
        key: "getOnClickNextFn",
        value: function getOnClickNextFn() {
          if (this.props.onClickNext)
            return this.props.onClickNext;
          return this.gotoNext;
        }
      }, {
        key: "calculateCutOff",
        value: function calculateCutOff(len, delta, items) {
          var cutoff = [];
          var cutsum = 0;
          for (var i in items) {
            var item = items[i];
            var fractOfLen = item.scaletwidth / len;
            cutoff[i] = Math.floor(fractOfLen * delta);
            cutsum += cutoff[i];
          }
          var stillToCutOff = delta - cutsum;
          while (stillToCutOff > 0) {
            for (i in cutoff) {
              cutoff[i]++;
              stillToCutOff--;
              if (stillToCutOff < 0)
                break;
            }
          }
          return cutoff;
        }
      }, {
        key: "buildImageRow",
        value: function buildImageRow(items, containerWidth) {
          var row = [];
          var len = 0;
          var imgMargin = 2 * this.props.margin;
          while (items.length > 0 && len < containerWidth) {
            var item = items.shift();
            row.push(item);
            len += item.scaletwidth + imgMargin;
          }
          var delta = len - containerWidth;
          if (row.length > 0 && delta > 0) {
            var cutoff = this.calculateCutOff(len, delta, row);
            for (var i in row) {
              var pixelsToRemove = cutoff[i];
              item = row[i];
              item.marginLeft = -Math.abs(Math.floor(pixelsToRemove / 2));
              item.vwidth = item.scaletwidth - pixelsToRemove;
            }
          } else {
            for (var j in row) {
              item = row[j];
              item.marginLeft = 0;
              item.vwidth = item.scaletwidth;
            }
          }
          return row;
        }
      }, {
        key: "setThumbScale",
        value: function setThumbScale(item) {
          item.scaletwidth = Math.floor(this.props.rowHeight * (item.thumbnailWidth / item.thumbnailHeight));
        }
      }, {
        key: "renderThumbs",
        value: function renderThumbs(containerWidth) {
          var images = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state.images;
          if (!images)
            return [];
          if (containerWidth == 0)
            return [];
          var items = images.slice();
          for (var t in items) {
            this.setThumbScale(items[t]);
          }
          var thumbs = [];
          var rows = [];
          while (items.length > 0) {
            rows.push(this.buildImageRow(items, containerWidth));
          }
          for (var r in rows) {
            for (var i in rows[r]) {
              var item = rows[r][i];
              if (this.props.maxRows) {
                if (r < this.props.maxRows) {
                  thumbs.push(item);
                }
              } else {
                thumbs.push(item);
              }
            }
          }
          return thumbs;
        }
      }, {
        key: "render",
        value: function render2() {
          var _this2 = this;
          var images = this.state.thumbnails.map(function(item, idx) {
            return _react2.default.createElement(_Image2.default, {
              key: "Image-" + idx + "-" + item.src,
              item,
              index: idx,
              margin: _this2.props.margin,
              height: _this2.props.rowHeight,
              isSelectable: _this2.props.enableImageSelection,
              onClick: _this2.getOnClickThumbnailFn(),
              onSelectImage: _this2.onSelectImage,
              tagStyle: _this2.props.tagStyle,
              tileViewportStyle: _this2.props.tileViewportStyle,
              thumbnailStyle: _this2.props.thumbnailStyle,
              thumbnailImageComponent: _this2.props.thumbnailImageComponent
            });
          });
          var resizeIframeStyles = {
            height: 0,
            margin: 0,
            padding: 0,
            overflow: "hidden",
            borderWidth: 0,
            position: "fixed",
            backgroundColor: "transparent",
            width: "100%"
          };
          return _react2.default.createElement("div", {
            id: this.props.id,
            className: "ReactGridGallery",
            ref: function ref(c) {
              return _this2._gallery = c;
            }
          }, _react2.default.createElement("iframe", {
            style: resizeIframeStyles,
            ref: function ref(c) {
              return c && c.contentWindow && c.contentWindow.addEventListener("resize", _this2.onResize);
            }
          }), images, _react2.default.createElement(_reactImages2.default, _extends2({
            images: this.props.images,
            backdropClosesModal: this.props.backdropClosesModal,
            currentImage: this.state.currentImage,
            preloadNextImage: this.props.preloadNextImage,
            customControls: this.props.customControls,
            enableKeyboardInput: this.props.enableKeyboardInput,
            imageCountSeparator: this.props.imageCountSeparator,
            isOpen: this.state.lightboxIsOpen,
            onClickImage: this.getOnClickImageFn(),
            onClickNext: this.getOnClickNextFn(),
            onClickPrev: this.getOnClickPrevFn(),
            showCloseButton: this.props.showCloseButton,
            showImageCount: this.props.showImageCount,
            onClose: this.closeLightbox,
            width: this.props.lightboxWidth,
            theme: this.props.theme,
            onClickThumbnail: this.getOnClickLightboxThumbnailFn(),
            showThumbnails: this.props.showLightboxThumbnails
          }, this.props.lightBoxProps)));
        }
      }]);
      return Gallery2;
    }(_react.Component);
    Gallery.displayName = "Gallery";
    Gallery.propTypes = {
      images: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        src: _propTypes2.default.string.isRequired,
        nano: _propTypes2.default.string,
        alt: _propTypes2.default.string,
        thumbnail: _propTypes2.default.string.isRequired,
        srcset: _propTypes2.default.array,
        caption: _propTypes2.default.string,
        tags: _propTypes2.default.arrayOf(_propTypes2.default.shape({
          value: _propTypes2.default.string.isRequired,
          title: _propTypes2.default.string.isRequired
        })),
        thumbnailWidth: _propTypes2.default.number.isRequired,
        thumbnailHeight: _propTypes2.default.number.isRequired,
        isSelected: _propTypes2.default.bool,
        thumbnailCaption: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element])
      })).isRequired,
      id: _propTypes2.default.string,
      enableImageSelection: _propTypes2.default.bool,
      onSelectImage: _propTypes2.default.func,
      rowHeight: _propTypes2.default.number,
      maxRows: _propTypes2.default.number,
      margin: _propTypes2.default.number,
      onClickThumbnail: _propTypes2.default.func,
      lightboxWillOpen: _propTypes2.default.func,
      lightboxWillClose: _propTypes2.default.func,
      enableLightbox: _propTypes2.default.bool,
      backdropClosesModal: _propTypes2.default.bool,
      currentImage: _propTypes2.default.number,
      preloadNextImage: _propTypes2.default.bool,
      customControls: _propTypes2.default.arrayOf(_propTypes2.default.node),
      currentImageWillChange: _propTypes2.default.func,
      enableKeyboardInput: _propTypes2.default.bool,
      imageCountSeparator: _propTypes2.default.string,
      isOpen: _propTypes2.default.bool,
      onClickImage: _propTypes2.default.func,
      onClickNext: _propTypes2.default.func,
      onClickPrev: _propTypes2.default.func,
      onClose: _propTypes2.default.func,
      showCloseButton: _propTypes2.default.bool,
      showImageCount: _propTypes2.default.bool,
      lightboxWidth: _propTypes2.default.number,
      tileViewportStyle: _propTypes2.default.func,
      thumbnailStyle: _propTypes2.default.func,
      showLightboxThumbnails: _propTypes2.default.bool,
      onClickLightboxThumbnail: _propTypes2.default.func,
      tagStyle: _propTypes2.default.object,
      thumbnailImageComponent: _propTypes2.default.func,
      lightBoxProps: _propTypes2.default.object
    };
    Gallery.defaultProps = {
      id: "ReactGridGallery",
      enableImageSelection: true,
      rowHeight: 180,
      margin: 2,
      enableLightbox: true,
      backdropClosesModal: false,
      currentImage: 0,
      preloadNextImage: true,
      enableKeyboardInput: true,
      imageCountSeparator: " of ",
      isOpen: false,
      showCloseButton: true,
      showImageCount: true,
      lightboxWidth: 1024,
      showLightboxThumbnails: false,
      lightBoxProps: {}
    };
    module.exports = Gallery;
  }
});

// dep:react-grid-gallery
init_define_process_env();
var react_grid_gallery_default = require_Gallery();
export {
  react_grid_gallery_default as default
};
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
//# sourceMappingURL=react-grid-gallery.js.map
